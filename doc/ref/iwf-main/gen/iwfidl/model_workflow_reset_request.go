/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// checks if the WorkflowResetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowResetRequest{}

// WorkflowResetRequest struct for WorkflowResetRequest
type WorkflowResetRequest struct {
	WorkflowId        string            `json:"workflowId"`
	WorkflowRunId     *string           `json:"workflowRunId,omitempty"`
	ResetType         WorkflowResetType `json:"resetType"`
	HistoryEventId    *int32            `json:"historyEventId,omitempty"`
	Reason            *string           `json:"reason,omitempty"`
	HistoryEventTime  *string           `json:"historyEventTime,omitempty"`
	StateId           *string           `json:"stateId,omitempty"`
	StateExecutionId  *string           `json:"stateExecutionId,omitempty"`
	SkipSignalReapply *bool             `json:"skipSignalReapply,omitempty"`
}

// NewWorkflowResetRequest instantiates a new WorkflowResetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowResetRequest(workflowId string, resetType WorkflowResetType) *WorkflowResetRequest {
	this := WorkflowResetRequest{}
	this.WorkflowId = workflowId
	this.ResetType = resetType
	return &this
}

// NewWorkflowResetRequestWithDefaults instantiates a new WorkflowResetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowResetRequestWithDefaults() *WorkflowResetRequest {
	this := WorkflowResetRequest{}
	return &this
}

// GetWorkflowId returns the WorkflowId field value
func (o *WorkflowResetRequest) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *WorkflowResetRequest) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetWorkflowRunId returns the WorkflowRunId field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetWorkflowRunId() string {
	if o == nil || IsNil(o.WorkflowRunId) {
		var ret string
		return ret
	}
	return *o.WorkflowRunId
}

// GetWorkflowRunIdOk returns a tuple with the WorkflowRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetWorkflowRunIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowRunId) {
		return nil, false
	}
	return o.WorkflowRunId, true
}

// HasWorkflowRunId returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasWorkflowRunId() bool {
	if o != nil && !IsNil(o.WorkflowRunId) {
		return true
	}

	return false
}

// SetWorkflowRunId gets a reference to the given string and assigns it to the WorkflowRunId field.
func (o *WorkflowResetRequest) SetWorkflowRunId(v string) {
	o.WorkflowRunId = &v
}

// GetResetType returns the ResetType field value
func (o *WorkflowResetRequest) GetResetType() WorkflowResetType {
	if o == nil {
		var ret WorkflowResetType
		return ret
	}

	return o.ResetType
}

// GetResetTypeOk returns a tuple with the ResetType field value
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetResetTypeOk() (*WorkflowResetType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResetType, true
}

// SetResetType sets field value
func (o *WorkflowResetRequest) SetResetType(v WorkflowResetType) {
	o.ResetType = v
}

// GetHistoryEventId returns the HistoryEventId field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetHistoryEventId() int32 {
	if o == nil || IsNil(o.HistoryEventId) {
		var ret int32
		return ret
	}
	return *o.HistoryEventId
}

// GetHistoryEventIdOk returns a tuple with the HistoryEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetHistoryEventIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HistoryEventId) {
		return nil, false
	}
	return o.HistoryEventId, true
}

// HasHistoryEventId returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasHistoryEventId() bool {
	if o != nil && !IsNil(o.HistoryEventId) {
		return true
	}

	return false
}

// SetHistoryEventId gets a reference to the given int32 and assigns it to the HistoryEventId field.
func (o *WorkflowResetRequest) SetHistoryEventId(v int32) {
	o.HistoryEventId = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *WorkflowResetRequest) SetReason(v string) {
	o.Reason = &v
}

// GetHistoryEventTime returns the HistoryEventTime field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetHistoryEventTime() string {
	if o == nil || IsNil(o.HistoryEventTime) {
		var ret string
		return ret
	}
	return *o.HistoryEventTime
}

// GetHistoryEventTimeOk returns a tuple with the HistoryEventTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetHistoryEventTimeOk() (*string, bool) {
	if o == nil || IsNil(o.HistoryEventTime) {
		return nil, false
	}
	return o.HistoryEventTime, true
}

// HasHistoryEventTime returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasHistoryEventTime() bool {
	if o != nil && !IsNil(o.HistoryEventTime) {
		return true
	}

	return false
}

// SetHistoryEventTime gets a reference to the given string and assigns it to the HistoryEventTime field.
func (o *WorkflowResetRequest) SetHistoryEventTime(v string) {
	o.HistoryEventTime = &v
}

// GetStateId returns the StateId field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetStateId() string {
	if o == nil || IsNil(o.StateId) {
		var ret string
		return ret
	}
	return *o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetStateIdOk() (*string, bool) {
	if o == nil || IsNil(o.StateId) {
		return nil, false
	}
	return o.StateId, true
}

// HasStateId returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasStateId() bool {
	if o != nil && !IsNil(o.StateId) {
		return true
	}

	return false
}

// SetStateId gets a reference to the given string and assigns it to the StateId field.
func (o *WorkflowResetRequest) SetStateId(v string) {
	o.StateId = &v
}

// GetStateExecutionId returns the StateExecutionId field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetStateExecutionId() string {
	if o == nil || IsNil(o.StateExecutionId) {
		var ret string
		return ret
	}
	return *o.StateExecutionId
}

// GetStateExecutionIdOk returns a tuple with the StateExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetStateExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StateExecutionId) {
		return nil, false
	}
	return o.StateExecutionId, true
}

// HasStateExecutionId returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasStateExecutionId() bool {
	if o != nil && !IsNil(o.StateExecutionId) {
		return true
	}

	return false
}

// SetStateExecutionId gets a reference to the given string and assigns it to the StateExecutionId field.
func (o *WorkflowResetRequest) SetStateExecutionId(v string) {
	o.StateExecutionId = &v
}

// GetSkipSignalReapply returns the SkipSignalReapply field value if set, zero value otherwise.
func (o *WorkflowResetRequest) GetSkipSignalReapply() bool {
	if o == nil || IsNil(o.SkipSignalReapply) {
		var ret bool
		return ret
	}
	return *o.SkipSignalReapply
}

// GetSkipSignalReapplyOk returns a tuple with the SkipSignalReapply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowResetRequest) GetSkipSignalReapplyOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipSignalReapply) {
		return nil, false
	}
	return o.SkipSignalReapply, true
}

// HasSkipSignalReapply returns a boolean if a field has been set.
func (o *WorkflowResetRequest) HasSkipSignalReapply() bool {
	if o != nil && !IsNil(o.SkipSignalReapply) {
		return true
	}

	return false
}

// SetSkipSignalReapply gets a reference to the given bool and assigns it to the SkipSignalReapply field.
func (o *WorkflowResetRequest) SetSkipSignalReapply(v bool) {
	o.SkipSignalReapply = &v
}

func (o WorkflowResetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowResetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["workflowId"] = o.WorkflowId
	if !IsNil(o.WorkflowRunId) {
		toSerialize["workflowRunId"] = o.WorkflowRunId
	}
	toSerialize["resetType"] = o.ResetType
	if !IsNil(o.HistoryEventId) {
		toSerialize["historyEventId"] = o.HistoryEventId
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.HistoryEventTime) {
		toSerialize["historyEventTime"] = o.HistoryEventTime
	}
	if !IsNil(o.StateId) {
		toSerialize["stateId"] = o.StateId
	}
	if !IsNil(o.StateExecutionId) {
		toSerialize["stateExecutionId"] = o.StateExecutionId
	}
	if !IsNil(o.SkipSignalReapply) {
		toSerialize["skipSignalReapply"] = o.SkipSignalReapply
	}
	return toSerialize, nil
}

type NullableWorkflowResetRequest struct {
	value *WorkflowResetRequest
	isSet bool
}

func (v NullableWorkflowResetRequest) Get() *WorkflowResetRequest {
	return v.value
}

func (v *NullableWorkflowResetRequest) Set(val *WorkflowResetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowResetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowResetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowResetRequest(val *WorkflowResetRequest) *NullableWorkflowResetRequest {
	return &NullableWorkflowResetRequest{value: val, isSet: true}
}

func (v NullableWorkflowResetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowResetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
