version: '3.9'

# see .env file for the default value of the environment variables
services:
  elasticsearch:
    container_name: elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - testing-network
    expose:
      - 9200
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - testing-network
    expose:
      - 5432
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - testing-network
    ports:
      - 7233:7233
    labels:
      kompose.volume.type: configMap
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    networks:
      - testing-network
    stdin_open: true
    tty: true
    volumes:
      - ./init-ci-temporal.sh:/etc/temporal/init-ci-temporal.sh
    entrypoint: sh -c "/etc/temporal/init-ci-temporal.sh"
  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"
    networks:
      - testing-network
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - testing-network
  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - testing-network
  cadence:
    image: ubercadence/server:0.24.0-auto-setup
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "7933:7933"
      - "7934:7934"
      - "7935:7935"
      - "7939:7939"
      - "7833:7833"
    environment:
      - "CASSANDRA_SEEDS=cassandra"
      - "DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development_es.yaml"
      - "ENABLE_ES=true"
      - "ES_SEEDS=elasticsearch"
      - "ES_VERSION=v7"
      - "KAFKA_SEEDS=kafka"
    depends_on:
      - cassandra
      - kafka
      - elasticsearch
    networks:
      - testing-network
  cadence-admin-tools:
    container_name: cadence-admin-tools
    depends_on:
      - cadence
    environment:
      - CADENCE_CLI_ADDRESS=cadence:7933
    image: ubercadence/cli:0.24.0
    networks:
      - testing-network
    stdin_open: true
    tty: true
    volumes:
      - ./init-ci-cadence.sh:/etc/cadence/init-ci-cadence.sh
    entrypoint: sh -c "/etc/cadence/init-ci-cadence.sh"
  cadence-web:
    image: ubercadence/web:v3.29.6
    environment:
      - "CADENCE_TCHANNEL_PEERS=cadence:7933"
    ports:
      - "8088:8088"
    depends_on:
      - cadence
    networks:
      - testing-network
  temporal-ui:
    container_name: temporal-ui-iwf
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    networks:
      - testing-network
    ports:
      - 8233:8080
networks:
  testing-network:
    driver: bridge
    name: testing-network
