From: <Saved by Blink>
Snapshot-Content-Location: http://timd.cn/temporal/advance/autoscaling-workers/
Subject: =?utf-8?Q?Temporal=20-=20Autoscaling=20Workers=20=E6=96=B9=E6=A1=88?=
Date: Wed, 12 Jun 2024 13:14:37 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--SuIEtYjZFjmMXIM5TqTSfIbEkTNEm2HBBCDxoovvzb----"


------MultipartBoundary--SuIEtYjZFjmMXIM5TqTSfIbEkTNEm2HBBCDxoovvzb----
Content-Type: text/html
Content-ID: <frame-812BDE9FE43401E9F9D06C9312D6BB56@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://timd.cn/temporal/advance/autoscaling-workers/

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"cid:css-8c9a6218-459f-4e90-aba9-0d3d5f81b21f@mhtml.blink" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width initial-scale=3D1">

<link href=3D"https://fonts.loli.net/css?family=3DOpen+Sans:400italic,700it=
alic,700,400&amp;subset=3Dlatin,latin-ext" rel=3D"stylesheet" type=3D"text/=
css"><title>Temporal - Autoscaling Workers =E6=96=B9=E6=A1=88</title>
</head>
<body class=3D"typora-export"><div class=3D"typora-export-content">
<div id=3D"write" class=3D""><h3 id=3D"1-=E5=9F=BA=E4=BA=8E=E4=BB=BB=E5=8A=
=A1=E9=98=9F=E5=88=97=E8=B4=9F=E8=BD=BD=E5=BC=B9=E6=80=A7=E4=BC=B8=E7=BC=A9=
-worker=E6=9A=82=E6=97=B6=E8=A1=8C=E4=B8=8D=E9=80=9A=EF=BC=89"><span>1. =E5=
=9F=BA=E4=BA=8E=E4=BB=BB=E5=8A=A1=E9=98=9F=E5=88=97=E8=B4=9F=E8=BD=BD=E5=BC=
=B9=E6=80=A7=E4=BC=B8=E7=BC=A9 Worker=EF=BC=88=E6=9A=82=E6=97=B6=E8=A1=8C=
=E4=B8=8D=E9=80=9A=EF=BC=89</span></h3><p><span>Temporal =E5=AE=98=E7=BD=91=
=E7=9A=84=E8=AF=B4=E6=98=8E=E5=9C=A8=EF=BC=9A</span><a href=3D"https://docs=
.temporal.io/server/production-deployment/#faq-autoscaling-workers-based-on=
-task-queue-load" target=3D"_blank" class=3D"url">https://docs.temporal.io/=
server/production-deployment/#faq-autoscaling-workers-based-on-task-queue-l=
oad</a><span>=E3=80=82</span></p><p><span>=E7=BF=BB=E8=AF=91=E5=A6=82=E4=B8=
=8B=EF=BC=9A</span></p><p><span>Temporal =E5=B0=9A=E6=9C=AA=E6=94=AF=E6=8C=
=81=E8=BF=94=E5=9B=9E=E4=BB=BB=E5=8A=A1=E9=98=9F=E5=88=97=E4=B8=AD=E7=9A=84=
=E4=BB=BB=E5=8A=A1=E6=95=B0=E9=87=8F=E3=80=82=E4=B8=BB=E8=A6=81=E7=9A=84=E6=
=8A=80=E6=9C=AF=E9=9A=9C=E7=A2=8D=E6=98=AF=E6=AF=8F=E4=B8=AA=E4=BB=BB=E5=8A=
=A1=E5=8F=AF=E4=BB=A5=E6=9C=89=E5=AE=83=E8=87=AA=E5=B7=B1=E7=9A=84 </span><=
code>ScheduleToStart</code><span> =E8=B6=85=E6=97=B6=EF=BC=8C=E5=9B=A0=E6=
=AD=A4=E4=BB=85=E8=AE=A1=E7=AE=97=E6=B7=BB=E5=8A=A0=E5=92=8C=E6=B6=88=E8=B4=
=B9=E5=A4=9A=E5=B0=91=E4=BB=BB=E5=8A=A1=E6=98=AF=E4=B8=8D=E5=A4=9F=E7=9A=84=
=E3=80=82</span></p><p><span>=E8=BF=99=E5=B0=B1=E6=98=AF=E6=88=91=E4=BB=AC=
=E5=BB=BA=E8=AE=AE=E8=BF=BD=E8=B8=AA </span><code>schedule_to_start_latency=
</code><span> =E6=9D=A5=E7=A1=AE=E5=AE=9A=E4=BB=BB=E5=8A=A1=E9=98=9F=E5=88=
=97=E6=98=AF=E5=90=A6=E6=9C=89=E7=A7=AF=E5=8E=8B=EF=BC=88=E5=AF=B9=E4=BA=8E=
=E7=BB=99=E5=AE=9A=E7=9A=84=E4=BB=BB=E5=8A=A1=E9=98=9F=E5=88=97 Workflow =
=E5=92=8C Activity Worker =E9=85=8D=E7=BD=AE=E4=B8=8D=E8=B6=B3=EF=BC=89=E7=
=9A=84=E5=8E=9F=E5=9B=A0=E3=80=82=E6=88=91=E4=BB=AC=E8=AE=A1=E5=88=92=E6=9C=
=AA=E6=9D=A5=E6=B7=BB=E5=8A=A0=E4=B8=80=E4=BA=9B=E7=89=B9=E6=80=A7=EF=BC=8C=
=E6=8F=90=E4=BE=9B=E6=9B=B4=E5=A4=9A=E5=AF=B9=E4=BB=BB=E5=8A=A1=E9=98=9F=E5=
=88=97=E7=8A=B6=E6=80=81=E7=9A=84=E5=8F=AF=E8=A7=81=E6=80=A7=E3=80=82</span=
></p><hr><h3 id=3D"2-=E5=9F=BA=E4=BA=8E-workflow-execution-=E5=BC=B9=E6=80=
=A7=E4=BC=B8=E7=BC=A9-worker"><span>2. =E5=9F=BA=E4=BA=8E Workflow Executio=
n =E5=BC=B9=E6=80=A7=E4=BC=B8=E7=BC=A9 Worker</span></h3><h5 id=3D"21-=E9=
=80=9A=E8=BF=87-query-=E8=8E=B7=E5=8F=96-workflow-execution-=E7=9A=84=E5=BD=
=93=E5=89=8D=E8=BF=9B=E5=BA=A6"><span>2.1. =E9=80=9A=E8=BF=87 Query =E8=8E=
=B7=E5=8F=96 Workflow Execution =E7=9A=84=E5=BD=93=E5=89=8D=E8=BF=9B=E5=BA=
=A6</span></h5><p><span>=E4=B8=8B=E9=9D=A2=E9=80=9A=E8=BF=87=E7=A4=BA=E4=BE=
=8B=E8=BF=9B=E8=A1=8C=E8=AF=B4=E6=98=8E=E3=80=82</span></p><p><span>=E9=A1=
=B9=E7=9B=AE=E7=BB=93=E6=9E=84=E5=A6=82=E4=B8=8B=EF=BC=9A</span></p><pre cl=
ass=3D"md-fences md-end-block ty-contain-cm modeLoaded" spellcheck=3D"false=
" lang=3D""><div class=3D"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror=
-wrap" lang=3D""><div style=3D"overflow: hidden; position: relative; width:=
 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect=3D"off" auto=
capitalize=3D"off" spellcheck=3D"false" tabindex=3D"0" style=3D"position: a=
bsolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: n=
one;"></textarea></div><div class=3D"CodeMirror-scrollbar-filler" cm-not-co=
ntent=3D"true"></div><div class=3D"CodeMirror-gutter-filler" cm-not-content=
=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D"-1"><div class=
=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bottom: 0px; border=
-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style=3D"=
position: relative; top: 0px;"><div class=3D"CodeMirror-lines" role=3D"pres=
entation"><div role=3D"presentation" style=3D"position: relative; outline: =
none;"><div class=3D"CodeMirror-measure"></div><div class=3D"CodeMirror-mea=
sure"></div><div style=3D"position: relative; z-index: 1;"></div><div class=
=3D"CodeMirror-code" role=3D"presentation" style=3D""><div class=3D"CodeMir=
ror-activeline" style=3D"position: relative;"><div class=3D"CodeMirror-acti=
veline-background CodeMirror-linebackground"></div><div class=3D"CodeMirror=
-gutter-background CodeMirror-activeline-gutter" style=3D"left: 0px; width:=
 0px;"></div><pre class=3D" CodeMirror-line " role=3D"presentation"><span r=
ole=3D"presentation" style=3D"padding-right: 0.1px;">.</span></pre></div><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;">=E2=94=9C=E2=94=80=E2=94=80 go.mod</s=
pan></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;">=E2=94=9C=E2=94=80=E2=94=
=80 go.sum</span></pre><pre class=3D" CodeMirror-line " role=3D"presentatio=
n"><span role=3D"presentation" style=3D"padding-right: 0.1px;">=E2=94=9C=E2=
=94=80=E2=94=80 main.go</span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;">=E2=94=9C=E2=94=80=E2=94=80 worker</span></pre><pre class=3D" CodeMirror=
-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-=
right: 0.1px;">=E2=94=82&nbsp;&nbsp; =E2=94=94=E2=94=80=E2=94=80 main.go</s=
pan></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;">=E2=94=94=E2=94=80=E2=94=
=80 workflow</span></pre><pre class=3D" CodeMirror-line " role=3D"presentat=
ion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp;  =
=E2=94=9C=E2=94=80=E2=94=80 autoscaling_workflow.go</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp;  =E2=94=94=E2=94=80=E2=94=80 model.go=
</span></pre></div></div></div></div></div><div style=3D"position: absolute=
; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: s=
olid; border-bottom-color: transparent; top: 198px;"></div><div class=3D"Co=
deMirror-gutters" style=3D"display: none; height: 198px;"></div></div></div=
></pre><p><span>go.mod=EF=BC=9A</span></p><pre class=3D"md-fences md-end-bl=
ock ty-contain-cm modeLoaded" spellcheck=3D"false" lang=3D"go"><div class=
=3D"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang=3D"go"><di=
v style=3D"overflow: hidden; position: relative; width: 3px; height: 0px; t=
op: 9px; left: 8px;"><textarea autocorrect=3D"off" autocapitalize=3D"off" s=
pellcheck=3D"false" tabindex=3D"0" style=3D"position: absolute; bottom: -1e=
m; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></d=
iv><div class=3D"CodeMirror-scrollbar-filler" cm-not-content=3D"true"></div=
><div class=3D"CodeMirror-gutter-filler" cm-not-content=3D"true"></div><div=
 class=3D"CodeMirror-scroll" tabindex=3D"-1"><div class=3D"CodeMirror-sizer=
" style=3D"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; p=
adding-right: 0px; padding-bottom: 0px;"><div style=3D"position: relative; =
top: 0px;"><div class=3D"CodeMirror-lines" role=3D"presentation"><div role=
=3D"presentation" style=3D"position: relative; outline: none;"><div class=
=3D"CodeMirror-measure"></div><div class=3D"CodeMirror-measure"></div><div =
style=3D"position: relative; z-index: 1;"></div><div class=3D"CodeMirror-co=
de" role=3D"presentation" style=3D""><div class=3D"CodeMirror-activeline" s=
tyle=3D"position: relative;"><div class=3D"CodeMirror-activeline-background=
 CodeMirror-linebackground"></div><div class=3D"CodeMirror-gutter-backgroun=
d CodeMirror-activeline-gutter" style=3D"left: 0px; width: 0px;"></div><pre=
 class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentati=
on" style=3D"padding-right: 0.1px;"><span class=3D"cm-variable">module</spa=
n> <span class=3D"cm-variable">autoscaling</span><span class=3D"cm-operator=
">-</span><span class=3D"cm-variable">demo</span></span></pre></div><pre cl=
ass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation"=
 style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">go</span> <span class=3D"cm-number">1.19</span></span></pre><pr=
e class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentat=
ion" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-variable">require</span> (</span></pre><pre class=3D" CodeMirror-line " =
role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0=
.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span>=
<span class=3D"cm-variable">github</span><span class=3D"cm-number">.</span>=
<span class=3D"cm-variable">com</span><span class=3D"cm-operator">/</span><=
span class=3D"cm-variable">google</span><span class=3D"cm-operator">/</span=
><span class=3D"cm-variable">uuid</span> <span class=3D"cm-variable">v1</sp=
an><span class=3D"cm-number">.3.0</span></span></pre><pre class=3D" CodeMir=
ror-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddi=
ng-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" =
">  </span><span class=3D"cm-keyword">go</span><span class=3D"cm-number">.<=
/span><span class=3D"cm-variable">temporal</span><span class=3D"cm-number">=
.</span><span class=3D"cm-variable">io</span><span class=3D"cm-operator">/<=
/span><span class=3D"cm-variable">sdk</span> <span class=3D"cm-variable">v1=
</span><span class=3D"cm-number">.17.0</span></span></pre><pre class=3D" Co=
deMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D"=
padding-right: 0.1px;">)</span></pre></div></div></div></div></div><div sty=
le=3D"position: absolute; height: 0px; width: 1px; border-bottom-width: 0px=
; border-bottom-style: solid; border-bottom-color: transparent; top: 176px;=
"></div><div class=3D"CodeMirror-gutters" style=3D"display: none; height: 1=
76px;"></div></div></div></pre><p><span>main.go=EF=BC=9A</span></p><pre cla=
ss=3D"md-fences md-end-block ty-contain-cm modeLoaded" spellcheck=3D"false"=
 lang=3D"go" style=3D"break-inside: unset;"><div class=3D"CodeMirror cm-s-i=
nner cm-s-null-scroll CodeMirror-wrap" lang=3D"go"><div style=3D"overflow: =
hidden; position: relative; width: 3px; height: 0px; top: 9px; left: 8px;">=
<textarea autocorrect=3D"off" autocapitalize=3D"off" spellcheck=3D"false" t=
abindex=3D"0" style=3D"position: absolute; bottom: -1em; padding: 0px; widt=
h: 1000px; height: 1em; outline: none;"></textarea></div><div class=3D"Code=
Mirror-scrollbar-filler" cm-not-content=3D"true"></div><div class=3D"CodeMi=
rror-gutter-filler" cm-not-content=3D"true"></div><div class=3D"CodeMirror-=
scroll" tabindex=3D"-1"><div class=3D"CodeMirror-sizer" style=3D"margin-lef=
t: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; pa=
dding-bottom: 0px;"><div style=3D"position: relative; top: 0px;"><div class=
=3D"CodeMirror-lines" role=3D"presentation"><div role=3D"presentation" styl=
e=3D"position: relative; outline: none;"><div class=3D"CodeMirror-measure">=
<pre>x</pre></div><div class=3D"CodeMirror-measure"></div><div style=3D"pos=
ition: relative; z-index: 1;"></div><div class=3D"CodeMirror-code" role=3D"=
presentation" style=3D""><div class=3D"CodeMirror-activeline" style=3D"posi=
tion: relative;"><div class=3D"CodeMirror-activeline-background CodeMirror-=
linebackground"></div><div class=3D"CodeMirror-gutter-background CodeMirror=
-activeline-gutter" style=3D"left: 0px; width: 0px;"></div><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"><span class=3D"cm-keyword">package</span> <span cla=
ss=3D"cm-variable">main</span></span></pre></div><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">import</span> (</span></pre><pre class=3D" CodeMirror-line " ro=
le=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1=
px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span>=
<span class=3D"cm-string">"autoscaling-demo/workflow"</span></span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presen=
tation" cm-text=3D" ">  </span><span class=3D"cm-string">"context"</span></=
span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span rol=
e=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" r=
ole=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-string">"fm=
t"</span></span></pre><div class=3D"" style=3D"position: relative;"><pre cl=
ass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation"=
 style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentatio=
n" cm-text=3D" ">  </span><span class=3D"cm-string">"github.com/google/uuid=
"</span></span></pre></div><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cl=
ass=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D=
"cm-string">"go.temporal.io/sdk/client"</span></span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-tex=
t=3D" ">  </span><span class=3D"cm-string">"log"</span></span></pre><pre cl=
ass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation"=
 style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentatio=
n" cm-text=3D"   ">  </span><span class=3D"cm-string">"time"</span></span><=
/pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"p=
resentation" style=3D"padding-right: 0.1px;">)</span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">func</span> <span class=3D"cm-variable">main</span>() {</span><=
/pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"p=
resentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D=
"presentation" cm-text=3D" ">  </span><span class=3D"cm-variable">c</span>,=
 <span class=3D"cm-variable">err</span> :<span class=3D"cm-operator">=3D</s=
pan> <span class=3D"cm-variable">client</span><span class=3D"cm-number">.</=
span><span class=3D"cm-variable">Dial</span>(<span class=3D"cm-variable">cl=
ient</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Op=
tions</span>{</span></pre><pre class=3D" CodeMirror-line " role=3D"presenta=
tion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-var=
iable">HostPort</span>: &nbsp;<span class=3D"cm-string">"127.0.0.1:7233"</s=
pan>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm=
-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab" =
role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">=
Namespace</span>: <span class=3D"cm-string">"default"</span>,</span></pre><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"prese=
ntation" cm-text=3D"  ">  </span>})</span></pre><pre class=3D" CodeMirror-l=
ine " role=3D"presentation"><span role=3D"presentation" style=3D"padding-ri=
ght: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  <=
/span><span class=3D"cm-keyword">if</span> <span class=3D"cm-variable">err<=
/span> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil<=
/span> {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"=
><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D=
"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable=
">log</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">F=
atalln</span>(<span class=3D"cm-string">"unable to create Temporal client"<=
/span>, <span class=3D"cm-variable">err</span>)</span></pre><pre class=3D" =
CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"  ">  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D=
"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">=
<span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span =
class=3D"cm-keyword">defer</span> <span class=3D"cm-variable">c</span><span=
 class=3D"cm-number">.</span><span class=3D"cm-variable">Close</span>()</sp=
an></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zws=
p=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">options</span> :<span class=3D"cm-operator">=3D</span> <span class=
=3D"cm-variable">client</span><span class=3D"cm-number">.</span><span class=
=3D"cm-variable">StartWorkflowOptions</span>{</span></pre><pre class=3D" Co=
deMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D"=
padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D" ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   =
">  </span><span class=3D"cm-variable">ID</span>: &nbsp; &nbsp; &nbsp; &nbs=
p;<span class=3D"cm-variable">fmt</span><span class=3D"cm-number">.</span><=
span class=3D"cm-variable">Sprintf</span>(<span class=3D"cm-string">"autosc=
aling-workflow-%s"</span>, <span class=3D"cm-variable">uuid</span><span cla=
ss=3D"cm-number">.</span><span class=3D"cm-variable">New</span>()<span clas=
s=3D"cm-number">.</span><span class=3D"cm-variable">String</span>()),</span=
></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D=
"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab" role=3D"pr=
esentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">TaskQueue<=
/span>: <span class=3D"cm-string">"autoscaling_workflow"</span>,</span></pr=
e><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pres=
entation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"pr=
esentation" cm-text=3D" ">  </span>}</span></pre><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  "> =
 </span><span class=3D"cm-variable">workflowRun</span>, <span class=3D"cm-v=
ariable">err</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"=
cm-variable">c</span><span class=3D"cm-number">.</span><span class=3D"cm-va=
riable">ExecuteWorkflow</span>(</span></pre><pre class=3D" CodeMirror-line =
" role=3D"presentation"><span role=3D"presentation" style=3D"padding-right:=
 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </spa=
n><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><sp=
an class=3D"cm-variable">context</span><span class=3D"cm-number">.</span><s=
pan class=3D"cm-variable">Background</span>(),</span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-tex=
t=3D" ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  =
 ">  </span><span class=3D"cm-variable">options</span>,</span></pre><pre cl=
ass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation"=
 style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentatio=
n" cm-text=3D"  ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"   ">  </span><span class=3D"cm-variable">workflow</span><span clas=
s=3D"cm-number">.</span><span class=3D"cm-variable">AutoscalingWorkflowDefi=
nition</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cl=
ass=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"c=
m-operator">&amp;</span><span class=3D"cm-variable">workflow</span><span cl=
ass=3D"cm-number">.</span><span class=3D"cm-variable">AutoscalingWorkflowPa=
ram</span>{</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm=
-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab"=
 role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable"=
>SleepFor</span>: <span class=3D"cm-number">3</span>,</span></pre><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation"=
 cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-t=
ext=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"   ">  </span><span class=3D"cm-variable">Name</span>: &nbsp; &nbsp; <s=
pan class=3D"cm-string">"Tim"</span>,</span></pre><pre class=3D" CodeMirror=
-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-=
right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" "> =
 </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </sp=
an>})</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm=
-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-keywor=
d">if</span> <span class=3D"cm-variable">err</span> <span class=3D"cm-opera=
tor">!=3D</span> <span class=3D"cm-atom">nil</span> {</span></pre><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation"=
 cm-text=3D" ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-tex=
t=3D"   ">  </span><span class=3D"cm-variable">log</span><span class=3D"cm-=
number">.</span><span class=3D"cm-variable">Printf</span>(<span class=3D"cm=
-string">"failed to ExecuteWorkflow err: %s\n"</span>, <span class=3D"cm-va=
riable">err</span><span class=3D"cm-number">.</span><span class=3D"cm-varia=
ble">Error</span>())</span></pre><pre class=3D" CodeMirror-line " role=3D"p=
resentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><s=
pan class=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span =
class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=
=3D"cm-keyword">return</span></span></pre><pre class=3D" CodeMirror-line " =
role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0=
.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span>=
}</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span =
role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-variable"=
>log</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Pr=
intf</span>(<span class=3D"cm-string">"Workflow Id: %s\n"</span>, <span cla=
ss=3D"cm-variable">workflowRun</span><span class=3D"cm-number">.</span><spa=
n class=3D"cm-variable">GetID</span>())</span></pre><pre class=3D" CodeMirr=
or-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddin=
g-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  =
">  </span><span class=3D"cm-variable">log</span><span class=3D"cm-number">=
.</span><span class=3D"cm-variable">Printf</span>(<span class=3D"cm-string"=
>"Run Id: %s\n"</span>, <span class=3D"cm-variable">workflowRun</span><span=
 class=3D"cm-number">.</span><span class=3D"cm-variable">GetRunID</span>())=
</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span r=
ole=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-=
zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">queryWorkflowWithOptionsContext</span>, <span class=3D"cm-variable"=
>cancelFunc</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"c=
m-variable">context</span><span class=3D"cm-number">.</span><span class=3D"=
cm-variable">WithTimeout</span>(<span class=3D"cm-variable">context</span><=
span class=3D"cm-number">.</span><span class=3D"cm-variable">Background</sp=
an>(), <span class=3D"cm-variable">time</span><span class=3D"cm-number">.</=
span><span class=3D"cm-variable">Minute</span>)</span></pre><pre class=3D" =
CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"    ">  </span><span class=3D"cm-keyword">defer</span> <span class=
=3D"cm-variable">cancelFunc</span>()</span></pre><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-ke=
yword">for</span> <span class=3D"cm-variable">i</span> :<span class=3D"cm-o=
perator">=3D</span> <span class=3D"cm-number">0</span>; <span class=3D"cm-v=
ariable">i</span> <span class=3D"cm-operator">&lt;</span> <span class=3D"cm=
-number">4</span>; <span class=3D"cm-variable">i</span><span class=3D"cm-op=
erator">++</span> {</span></pre><pre class=3D" CodeMirror-line " role=3D"pr=
esentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><sp=
an class=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=
=3D"cm-variable">queryWorkflowWithOptionsResponse</span>, <span class=3D"cm=
-variable">err</span> :<span class=3D"cm-operator">=3D</span> <span class=
=3D"cm-variable">c</span><span class=3D"cm-number">.</span><span class=3D"c=
m-variable">QueryWorkflowWithOptions</span>(<span class=3D"cm-variable">que=
ryWorkflowWithOptionsContext</span>,</span></pre><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  "> =
 </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </sp=
an><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><s=
pan class=3D"cm-operator">&amp;</span><span class=3D"cm-variable">client</s=
pan><span class=3D"cm-number">.</span><span class=3D"cm-variable">QueryWork=
flowWithOptionsRequest</span>{</span></pre><pre class=3D" CodeMirror-line "=
 role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: =
0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span=
><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><spa=
n class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D=
"cm-variable">WorkflowID</span>: <span class=3D"cm-variable">workflowRun</s=
pan><span class=3D"cm-number">.</span><span class=3D"cm-variable">GetID</sp=
an>(),</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><=
span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-tab" =
role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"p=
resentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">RunID</sp=
an>: &nbsp; &nbsp; &nbsp;<span class=3D"cm-variable">workflowRun</span><spa=
n class=3D"cm-number">.</span><span class=3D"cm-variable">GetRunID</span>()=
,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span =
role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" rol=
e=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"=
presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"prese=
ntation" cm-text=3D"   ">  </span><span class=3D"cm-variable">QueryType</sp=
an>: &nbsp;<span class=3D"cm-string">"current_state"</span>,</span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presen=
tation" cm-text=3D"  ">  </span><span class=3D"cm-tab" role=3D"presentation=
" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"   ">  </span>})</span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><spa=
n class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span cla=
ss=3D"cm-keyword">if</span> <span class=3D"cm-variable">err</span> <span cl=
ass=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil</span> {</span>=
</pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"=
presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-tab" role=3D"pre=
sentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presenta=
tion" cm-text=3D"   ">  </span><span class=3D"cm-variable">log</span><span =
class=3D"cm-number">.</span><span class=3D"cm-variable">Fatal</span>(<span =
class=3D"cm-variable">err</span>)</span></pre><pre class=3D" CodeMirror-lin=
e " role=3D"presentation"><span role=3D"presentation" style=3D"padding-righ=
t: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  <=
/span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span=
>}</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span=
 role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-ta=
b" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab" rol=
e=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-keyword">var<=
/span> <span class=3D"cm-variable">currentState</span> <span class=3D"cm-ke=
yword">string</span></span></pre><pre class=3D" CodeMirror-line " role=3D"p=
resentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><s=
pan class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=
=3D"cm-keyword">if</span> <span class=3D"cm-variable">err</span> :<span cla=
ss=3D"cm-operator">=3D</span> <span class=3D"cm-variable">queryWorkflowWith=
OptionsResponse</span><span class=3D"cm-number">.</span><span class=3D"cm-v=
ariable">QueryResult</span><span class=3D"cm-number">.</span><span class=3D=
"cm-variable">Get</span>(<span class=3D"cm-operator">&amp;</span><span clas=
s=3D"cm-variable">currentState</span>); <span class=3D"cm-variable">err</sp=
an> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil</sp=
an> {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm=
-tab" role=3D"presentation" cm-text=3D"    ">  </span><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" rol=
e=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">log=
</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Fatal<=
/span>(<span class=3D"cm-variable">err</span>)</span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-tex=
t=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"=
   ">  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D"presen=
tation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"c=
m-variable">fmt</span><span class=3D"cm-number">.</span><span class=3D"cm-v=
ariable">Println</span>(<span class=3D"cm-string">"current state:"</span>, =
<span class=3D"cm-variable">currentState</span>)</span></pre><pre class=3D"=
 CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"   ">  </span><span class=3D"cm-variable">time</span><span class=3D"cm-=
number">.</span><span class=3D"cm-variable">Sleep</span>(<span class=3D"cm-=
variable">time</span><span class=3D"cm-number">.</span><span class=3D"cm-va=
riable">Second</span>)</span></pre><pre class=3D" CodeMirror-line " role=3D=
"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">=
<span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span>}</spa=
n></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zws=
p=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">res</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"c=
m-atom">make</span>(<span class=3D"cm-keyword">map</span>[<span class=3D"cm=
-keyword">string</span>]<span class=3D"cm-keyword">interface</span>{})</spa=
n></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" ro=
le=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-keyword">if</s=
pan> <span class=3D"cm-variable">err</span> :<span class=3D"cm-operator">=
=3D</span> <span class=3D"cm-variable">workflowRun</span><span class=3D"cm-=
number">.</span><span class=3D"cm-variable">Get</span>(<span class=3D"cm-va=
riable">context</span><span class=3D"cm-number">.</span><span class=3D"cm-v=
ariable">Background</span>(), <span class=3D"cm-operator">&amp;</span><span=
 class=3D"cm-variable">res</span>); <span class=3D"cm-variable">err</span> =
<span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil</span> =
{</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span =
role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" rol=
e=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">log=
</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Fatall=
n</span>(<span class=3D"cm-string">"failed to execute Workflow"</span>, <sp=
an class=3D"cm-variable">err</span>)</span></pre><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"    "=
>  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm=
-variable">log</span><span class=3D"cm-number">.</span><span class=3D"cm-va=
riable">Printf</span>(<span class=3D"cm-string">"result: %v\n"</span>, <spa=
n class=3D"cm-variable">res</span>)</span></pre><div class=3D"" style=3D"po=
sition: relative;"><pre class=3D" CodeMirror-line " role=3D"presentation"><=
span role=3D"presentation" style=3D"padding-right: 0.1px;">}</span></pre></=
div></div></div></div></div></div><div style=3D"position: absolute; height:=
 0px; width: 1px; border-bottom-width: 0px; border-bottom-style: solid; bor=
der-bottom-color: transparent; top: 1496px;"></div><div class=3D"CodeMirror=
-gutters" style=3D"display: none; height: 1496px;"></div></div></div></pre>=
<p><span>worker/main.go=EF=BC=9A</span></p><pre class=3D"md-fences md-end-b=
lock ty-contain-cm modeLoaded" spellcheck=3D"false" lang=3D"go" style=3D"br=
eak-inside: unset;"><div class=3D"CodeMirror cm-s-inner cm-s-null-scroll Co=
deMirror-wrap" lang=3D"go"><div style=3D"overflow: hidden; position: relati=
ve; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect=3D=
"off" autocapitalize=3D"off" spellcheck=3D"false" tabindex=3D"0" style=3D"p=
osition: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; =
outline: none;"></textarea></div><div class=3D"CodeMirror-scrollbar-filler"=
 cm-not-content=3D"true"></div><div class=3D"CodeMirror-gutter-filler" cm-n=
ot-content=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D"-1">=
<div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bottom: 0=
px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div=
 style=3D"position: relative; top: 0px;"><div class=3D"CodeMirror-lines" ro=
le=3D"presentation"><div role=3D"presentation" style=3D"position: relative;=
 outline: none;"><div class=3D"CodeMirror-measure"></div><div class=3D"Code=
Mirror-measure"></div><div style=3D"position: relative; z-index: 1;"></div>=
<div class=3D"CodeMirror-code" role=3D"presentation" style=3D""><div class=
=3D"CodeMirror-activeline" style=3D"position: relative;"><div class=3D"Code=
Mirror-activeline-background CodeMirror-linebackground"></div><div class=3D=
"CodeMirror-gutter-background CodeMirror-activeline-gutter" style=3D"left: =
0px; width: 0px;"></div><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-keyword">package</span> <span class=3D"cm-variable">main</span></spa=
n></pre></div><pre class=3D" CodeMirror-line " role=3D"presentation"><span =
role=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm=
-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">import</span> (</span></pre><pre class=3D" CodeMirror-line " ro=
le=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1=
px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span>=
<span class=3D"cm-string">"autoscaling-demo/workflow"</span></span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presen=
tation" cm-text=3D" ">  </span><span class=3D"cm-string">"go.temporal.io/sd=
k/client"</span></span></pre><pre class=3D" CodeMirror-line " role=3D"prese=
ntation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span =
class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=
=3D"cm-string">"go.temporal.io/sdk/worker"</span></span></pre><pre class=3D=
" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D" ">  </span><span class=3D"cm-string">"log"</span></span></pre><pre=
 class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentati=
on" style=3D"padding-right: 0.1px;">)</span></pre><pre class=3D" CodeMirror=
-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-=
right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">func</span> <span class=3D"cm-variable">main</span>() {</span><=
/pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"p=
resentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D=
"presentation" cm-text=3D" ">  </span><span class=3D"cm-variable">c</span>,=
 <span class=3D"cm-variable">err</span> :<span class=3D"cm-operator">=3D</s=
pan> <span class=3D"cm-variable">client</span><span class=3D"cm-number">.</=
span><span class=3D"cm-variable">Dial</span>(<span class=3D"cm-variable">cl=
ient</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Op=
tions</span>{</span></pre><pre class=3D" CodeMirror-line " role=3D"presenta=
tion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-var=
iable">HostPort</span>: &nbsp;<span class=3D"cm-string">"127.0.0.1:7233"</s=
pan>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm=
-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab" =
role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">=
Namespace</span>: <span class=3D"cm-string">"default"</span>,</span></pre><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"prese=
ntation" cm-text=3D"  ">  </span>})</span></pre><pre class=3D" CodeMirror-l=
ine " role=3D"presentation"><span role=3D"presentation" style=3D"padding-ri=
ght: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  <=
/span><span class=3D"cm-keyword">if</span> <span class=3D"cm-variable">err<=
/span> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil<=
/span> {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"=
><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D=
"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable=
">log</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">F=
atalln</span>(<span class=3D"cm-string">"unable to create Temporal client"<=
/span>, <span class=3D"cm-variable">err</span>)</span></pre><pre class=3D" =
CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"  ">  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D=
"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">=
<span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span =
class=3D"cm-keyword">defer</span> <span class=3D"cm-variable">c</span><span=
 class=3D"cm-number">.</span><span class=3D"cm-variable">Close</span>()</sp=
an></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zws=
p=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">w</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-=
variable">worker</span><span class=3D"cm-number">.</span><span class=3D"cm-=
variable">New</span>(<span class=3D"cm-variable">c</span>, <span class=3D"c=
m-string">"autoscaling_workflow"</span>, <span class=3D"cm-variable">worker=
</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Option=
s</span>{})</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"c=
m-variable">w</span><span class=3D"cm-number">.</span><span class=3D"cm-var=
iable">RegisterWorkflow</span>(<span class=3D"cm-variable">workflow</span><=
span class=3D"cm-number">.</span><span class=3D"cm-variable">AutoscalingWor=
kflowDefinition</span>)</span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><s=
pan class=3D"cm-variable">w</span><span class=3D"cm-number">.</span><span c=
lass=3D"cm-variable">RegisterActivity</span>(<span class=3D"cm-variable">wo=
rkflow</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">=
SayHello</span>)</span></pre><pre class=3D" CodeMirror-line " role=3D"prese=
ntation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span =
class=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span clas=
s=3D"cm-variable">err</span> <span class=3D"cm-operator">=3D</span> <span c=
lass=3D"cm-variable">w</span><span class=3D"cm-number">.</span><span class=
=3D"cm-variable">Run</span>(<span class=3D"cm-variable">worker</span><span =
class=3D"cm-number">.</span><span class=3D"cm-variable">InterruptCh</span>(=
))</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span=
 role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-ta=
b" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-keyword"=
>if</span> <span class=3D"cm-variable">err</span> <span class=3D"cm-operato=
r">!=3D</span> <span class=3D"cm-atom">nil</span> {</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" =
cm-text=3D" ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"   ">  </span><span class=3D"cm-variable">log</span><span class=3D"cm-n=
umber">.</span><span class=3D"cm-variable">Fatalln</span>(<span class=3D"cm=
-string">"unable to start Worker"</span>, <span class=3D"cm-variable">err</=
span>)</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><=
span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D"    ">  </span>}</span></pre><pre c=
lass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation=
" style=3D"padding-right: 0.1px;">}</span></pre></div></div></div></div></d=
iv><div style=3D"position: absolute; height: 0px; width: 1px; border-bottom=
-width: 0px; border-bottom-style: solid; border-bottom-color: transparent; =
top: 594px;"></div><div class=3D"CodeMirror-gutters" style=3D"display: none=
; height: 594px;"></div></div></div></pre><p><span>workflow/autoscaling</sp=
an><span>_</span><span>workflow.go=EF=BC=9A</span></p><pre class=3D"md-fenc=
es md-end-block ty-contain-cm modeLoaded" spellcheck=3D"false" lang=3D"go" =
style=3D"break-inside: unset;"><div class=3D"CodeMirror cm-s-inner cm-s-nul=
l-scroll CodeMirror-wrap" lang=3D"go"><div style=3D"overflow: hidden; posit=
ion: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea aut=
ocorrect=3D"off" autocapitalize=3D"off" spellcheck=3D"false" tabindex=3D"0"=
 style=3D"position: absolute; bottom: -1em; padding: 0px; width: 1000px; he=
ight: 1em; outline: none;"></textarea></div><div class=3D"CodeMirror-scroll=
bar-filler" cm-not-content=3D"true"></div><div class=3D"CodeMirror-gutter-f=
iller" cm-not-content=3D"true"></div><div class=3D"CodeMirror-scroll" tabin=
dex=3D"-1"><div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margi=
n-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom:=
 0px;"><div style=3D"position: relative; top: 0px;"><div class=3D"CodeMirro=
r-lines" role=3D"presentation"><div role=3D"presentation" style=3D"position=
: relative; outline: none;"><div class=3D"CodeMirror-measure"></div><div cl=
ass=3D"CodeMirror-measure"></div><div style=3D"position: relative; z-index:=
 1;"></div><div class=3D"CodeMirror-code" role=3D"presentation" style=3D"">=
<div class=3D"CodeMirror-activeline" style=3D"position: relative;"><div cla=
ss=3D"CodeMirror-activeline-background CodeMirror-linebackground"></div><di=
v class=3D"CodeMirror-gutter-background CodeMirror-activeline-gutter" style=
=3D"left: 0px; width: 0px;"></div><pre class=3D" CodeMirror-line " role=3D"=
presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><=
span class=3D"cm-keyword">package</span> <span class=3D"cm-variable">workfl=
ow</span></span></pre></div><pre class=3D" CodeMirror-line " role=3D"presen=
tation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span c=
m-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">import</span> (</span></pre><pre class=3D" CodeMirror-line " ro=
le=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1=
px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span>=
<span class=3D"cm-string">"context"</span></span></pre><pre class=3D" CodeM=
irror-line " role=3D"presentation"><span role=3D"presentation" style=3D"pad=
ding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D=
"   ">  </span><span class=3D"cm-string">"fmt"</span></span></pre><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation"=
 cm-text=3D"   ">  </span><span class=3D"cm-string">"go.temporal.io/sdk/tem=
poral"</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presenta=
tion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D=
"cm-string">"go.temporal.io/sdk/workflow"</span></span></pre><pre class=3D"=
 CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"   ">  </span><span class=3D"cm-string">"time"</span></span></pre><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;">)</span></pre><pre class=3D" CodeMir=
ror-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddi=
ng-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">func</span> <span class=3D"cm-variable">AutoscalingWorkflowDefi=
nition</span>(<span class=3D"cm-variable">ctx</span> <span class=3D"cm-vari=
able">workflow</span><span class=3D"cm-number">.</span><span class=3D"cm-va=
riable">Context</span>,</span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><=
span class=3D"cm-variable">param</span> <span class=3D"cm-operator">*</span=
><span class=3D"cm-variable">AutoscalingWorkflowParam</span>) (<span class=
=3D"cm-keyword">map</span>[<span class=3D"cm-keyword">string</span>]<span c=
lass=3D"cm-keyword">interface</span>{}, <span class=3D"cm-keyword">error</s=
pan>) {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-var=
iable">currentState</span> :<span class=3D"cm-operator">=3D</span> <span cl=
ass=3D"cm-string">"started"</span> <span class=3D"cm-comment">// This could=
 be any serializable struct</span></span></pre><pre class=3D" CodeMirror-li=
ne " role=3D"presentation"><span role=3D"presentation" style=3D"padding-rig=
ht: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">queryType</span> :<span class=3D"cm-operator">=3D</span> <span clas=
s=3D"cm-string">"current_state"</span></span></pre><pre class=3D" CodeMirro=
r-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding=
-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  "=
>  </span><span class=3D"cm-keyword">if</span> <span class=3D"cm-variable">=
err</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-variab=
le">workflow</span><span class=3D"cm-number">.</span><span class=3D"cm-vari=
able">SetQueryHandler</span>(<span class=3D"cm-variable">ctx</span>, <span =
class=3D"cm-variable">queryType</span>, <span class=3D"cm-keyword">func</sp=
an>() (<span class=3D"cm-keyword">string</span>, <span class=3D"cm-keyword"=
>error</span>) {</span></pre><pre class=3D" CodeMirror-line " role=3D"prese=
ntation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span =
class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"c=
m-keyword">return</span> <span class=3D"cm-variable">currentState</span>, <=
span class=3D"cm-atom">nil</span></span></pre><pre class=3D" CodeMirror-lin=
e " role=3D"presentation"><span role=3D"presentation" style=3D"padding-righ=
t: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </s=
pan>}); <span class=3D"cm-variable">err</span> <span class=3D"cm-operator">=
!=3D</span> <span class=3D"cm-atom">nil</span> {</span></pre><pre class=3D"=
 CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"    ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"   ">  </span><span class=3D"cm-variable">currentState</span> <span cla=
ss=3D"cm-operator">=3D</span> <span class=3D"cm-string">"failed to register=
 query handler"</span></span></pre><pre class=3D" CodeMirror-line " role=3D=
"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">=
<span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=
=3D"cm-keyword">return</span> <span class=3D"cm-atom">nil</span>, <span cla=
ss=3D"cm-variable">err</span></span></pre><pre class=3D" CodeMirror-line " =
role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0=
.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span=
>}</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span=
 role=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" c=
m-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">currentState</span> <span class=3D"cm-operator">=3D</span> <span cl=
ass=3D"cm-string">"waiting timer"</span></span></pre><pre class=3D" CodeMir=
ror-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddi=
ng-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" =
   ">  </span><span class=3D"cm-keyword">if</span> <span class=3D"cm-variab=
le">err</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-va=
riable">workflow</span><span class=3D"cm-number">.</span><span class=3D"cm-=
variable">NewTimer</span>(<span class=3D"cm-variable">ctx</span>,</span></p=
re><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pre=
sentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"p=
resentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presen=
tation" cm-text=3D"   ">  </span><span class=3D"cm-variable">time</span><sp=
an class=3D"cm-number">.</span><span class=3D"cm-variable">Duration</span>(=
<span class=3D"cm-variable">param</span><span class=3D"cm-number">.</span><=
span class=3D"cm-variable">SleepFor</span>)<span class=3D"cm-operator">*</s=
pan><span class=3D"cm-variable">time</span><span class=3D"cm-number">.</spa=
n><span class=3D"cm-variable">Second</span>)<span class=3D"cm-number">.</sp=
an><span class=3D"cm-variable">Get</span>(<span class=3D"cm-variable">ctx</=
span>, <span class=3D"cm-atom">nil</span>); <span class=3D"cm-variable">err=
</span> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil=
</span> {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation=
"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">currentState</span> <span class=3D"cm-operator">=3D</span> <span cl=
ass=3D"cm-string">"timer failed"</span></span></pre><pre class=3D" CodeMirr=
or-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddin=
g-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" "=
>  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </=
span><span class=3D"cm-keyword">return</span> <span class=3D"cm-atom">nil</=
span>, <span class=3D"cm-variable">err</span></span></pre><pre class=3D" Co=
deMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D"=
padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"  ">  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D"pre=
sentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><spa=
n cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">retryPolicy</span> :<span class=3D"cm-operator">=3D</span> <span cl=
ass=3D"cm-operator">&amp;</span><span class=3D"cm-variable">temporal</span>=
<span class=3D"cm-number">.</span><span class=3D"cm-variable">RetryPolicy</=
span>{</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><=
span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab"=
 role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable"=
>InitialInterval</span>: &nbsp; &nbsp;<span class=3D"cm-variable">time</spa=
n><span class=3D"cm-number">.</span><span class=3D"cm-variable">Second</spa=
n>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><spa=
n role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-t=
ab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" r=
ole=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">B=
ackoffCoefficient</span>: <span class=3D"cm-number">2.0</span>,</span></pre=
><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"prese=
ntation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"pre=
sentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presenta=
tion" cm-text=3D"   ">  </span><span class=3D"cm-variable">MaximumInterval<=
/span>: &nbsp; &nbsp;<span class=3D"cm-variable">time</span><span class=3D"=
cm-number">.</span><span class=3D"cm-variable">Minute</span>,</span></pre><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"prese=
ntation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentati=
on" cm-text=3D"   ">  </span><span class=3D"cm-variable">MaximumAttempts</s=
pan>: &nbsp; &nbsp;<span class=3D"cm-number">500</span>,</span></pre><pre c=
lass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation=
" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentati=
on" cm-text=3D" ">  </span>}</span></pre><pre class=3D" CodeMirror-line " r=
ole=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.=
1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span>=
<span class=3D"cm-variable">sayHelloOptions</span> :<span class=3D"cm-opera=
tor">=3D</span> <span class=3D"cm-variable">workflow</span><span class=3D"c=
m-number">.</span><span class=3D"cm-variable">ActivityOptions</span>{</span=
></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D=
"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D"    ">  </span><span class=3D"cm-tab" role=3D"=
presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">RetryPol=
icy</span>: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm-vari=
able">retryPolicy</span>,</span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><s=
pan class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span c=
lass=3D"cm-variable">ScheduleToCloseTimeout</span>: <span class=3D"cm-numbe=
r">30</span> <span class=3D"cm-operator">*</span> <span class=3D"cm-variabl=
e">time</span><span class=3D"cm-number">.</span><span class=3D"cm-variable"=
>Minute</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presen=
tation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span>}</span></p=
re><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pre=
sentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"p=
resentation" cm-text=3D"  ">  </span><span class=3D"cm-variable">sayHelloCo=
ntext</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-vari=
able">workflow</span><span class=3D"cm-number">.</span><span class=3D"cm-va=
riable">WithActivityOptions</span>(<span class=3D"cm-variable">ctx</span>, =
<span class=3D"cm-variable">sayHelloOptions</span>)</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" =
cm-text=3D" ">  </span><span class=3D"cm-variable">currentState</span> <spa=
n class=3D"cm-operator">=3D</span> <span class=3D"cm-string">"waiting activ=
ity"</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-=
variable">sayHelloFuture</span> :<span class=3D"cm-operator">=3D</span> <sp=
an class=3D"cm-variable">workflow</span><span class=3D"cm-number">.</span><=
span class=3D"cm-variable">ExecuteActivity</span>(<span class=3D"cm-variabl=
e">sayHelloContext</span>, <span class=3D"cm-variable">SayHello</span>, <sp=
an class=3D"cm-variable">param</span><span class=3D"cm-number">.</span><spa=
n class=3D"cm-variable">Name</span>)</span></pre><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"    "=
>  </span><span class=3D"cm-variable">sayHelloResult</span> :<span class=3D=
"cm-operator">=3D</span> <span class=3D"cm-atom">new</span>(<span class=3D"=
cm-keyword">string</span>)</span></pre><pre class=3D" CodeMirror-line " rol=
e=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1p=
x;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><=
span class=3D"cm-variable">err</span> :<span class=3D"cm-operator">=3D</spa=
n> <span class=3D"cm-variable">sayHelloFuture</span><span class=3D"cm-numbe=
r">.</span><span class=3D"cm-variable">Get</span>(<span class=3D"cm-variabl=
e">ctx</span>, <span class=3D"cm-operator">&amp;</span><span class=3D"cm-va=
riable">sayHelloResult</span>)</span></pre><pre class=3D" CodeMirror-line "=
 role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: =
0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </spa=
n><span class=3D"cm-keyword">if</span> <span class=3D"cm-variable">err</spa=
n> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil</spa=
n> {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><sp=
an role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-=
tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-tab" ro=
le=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">cu=
rrentState</span> <span class=3D"cm-operator">=3D</span> <span class=3D"cm-=
string">"activity failed"</span></span></pre><pre class=3D" CodeMirror-line=
 " role=3D"presentation"><span role=3D"presentation" style=3D"padding-right=
: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </s=
pan><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><=
span class=3D"cm-keyword">return</span> <span class=3D"cm-atom">nil</span>,=
 <span class=3D"cm-variable">err</span></span></pre><pre class=3D" CodeMirr=
or-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddin=
g-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  =
">  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D"presentat=
ion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-t=
ext=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">currentState</span> <span class=3D"cm-operator">=3D</span> <span cl=
ass=3D"cm-string">"done"</span></span></pre><pre class=3D" CodeMirror-line =
" role=3D"presentation"><span role=3D"presentation" style=3D"padding-right:=
 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </spa=
n><span class=3D"cm-keyword">return</span> <span class=3D"cm-keyword">map</=
span>[<span class=3D"cm-keyword">string</span>]<span class=3D"cm-keyword">i=
nterface</span>{}{</span></pre><pre class=3D" CodeMirror-line " role=3D"pre=
sentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><spa=
n class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"c=
m-string">"SleepFor"</span>: <span class=3D"cm-variable">param</span><span =
class=3D"cm-number">.</span><span class=3D"cm-variable">SleepFor</span>,</s=
pan></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" ro=
le=3D"presentation" cm-text=3D"    ">  </span><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-string">"SayHe=
llo"</span>: <span class=3D"cm-variable">sayHelloResult</span>,</span></pre=
><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"prese=
ntation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"pre=
sentation" cm-text=3D"    ">  </span>}, <span class=3D"cm-atom">nil</span><=
/span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span ro=
le=3D"presentation" style=3D"padding-right: 0.1px;">}</span></pre><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">func</span> <span class=3D"cm-variable">SayHello</span>(<span c=
lass=3D"cm-variable">ctx</span> <span class=3D"cm-variable">context</span><=
span class=3D"cm-number">.</span><span class=3D"cm-variable">Context</span>=
, <span class=3D"cm-variable">name</span> <span class=3D"cm-keyword">string=
</span>) (<span class=3D"cm-keyword">string</span>, <span class=3D"cm-keywo=
rd">error</span>) {</span></pre><pre class=3D" CodeMirror-line " role=3D"pr=
esentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><sp=
an class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span cla=
ss=3D"cm-variable">msg</span> :<span class=3D"cm-operator">=3D</span> <span=
 class=3D"cm-variable">fmt</span><span class=3D"cm-number">.</span><span cl=
ass=3D"cm-variable">Sprintf</span>(<span class=3D"cm-string">"Hello, %s!"</=
span>, <span class=3D"cm-variable">name</span>)</span></pre><pre class=3D" =
CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"  ">  </span><span class=3D"cm-variable">fmt</span><span class=3D"c=
m-number">.</span><span class=3D"cm-variable">Printf</span>(<span class=3D"=
cm-string">"Activity::SayHello - %s\n"</span>, <span class=3D"cm-variable">=
msg</span>)</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm=
-keyword">return</span> <span class=3D"cm-variable">msg</span>, <span class=
=3D"cm-atom">nil</span></span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;">}</span></pre></div></div></div></div></div><div style=3D"position: abso=
lute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-styl=
e: solid; border-bottom-color: transparent; top: 1342px;"></div><div class=
=3D"CodeMirror-gutters" style=3D"display: none; height: 1342px;"></div></di=
v></div></pre><p><span>workflow/model.go=EF=BC=9A</span></p><pre class=3D"m=
d-fences md-end-block ty-contain-cm modeLoaded" spellcheck=3D"false" lang=
=3D"go"><div class=3D"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wra=
p" lang=3D"go"><div style=3D"overflow: hidden; position: relative; width: 3=
px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect=3D"off" autoca=
pitalize=3D"off" spellcheck=3D"false" tabindex=3D"0" style=3D"position: abs=
olute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: non=
e;"></textarea></div><div class=3D"CodeMirror-scrollbar-filler" cm-not-cont=
ent=3D"true"></div><div class=3D"CodeMirror-gutter-filler" cm-not-content=
=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D"-1"><div class=
=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bottom: 0px; border=
-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style=3D"=
position: relative; top: 0px;"><div class=3D"CodeMirror-lines" role=3D"pres=
entation"><div role=3D"presentation" style=3D"position: relative; outline: =
none;"><div class=3D"CodeMirror-measure"><pre>x</pre></div><div class=3D"Co=
deMirror-measure"></div><div style=3D"position: relative; z-index: 1;"></di=
v><div class=3D"CodeMirror-code" role=3D"presentation" style=3D""><div clas=
s=3D"CodeMirror-activeline" style=3D"position: relative;"><div class=3D"Cod=
eMirror-activeline-background CodeMirror-linebackground"></div><div class=
=3D"CodeMirror-gutter-background CodeMirror-activeline-gutter" style=3D"lef=
t: 0px; width: 0px;"></div><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cl=
ass=3D"cm-keyword">package</span> <span class=3D"cm-variable">workflow</spa=
n></span></pre></div><pre class=3D" CodeMirror-line " role=3D"presentation"=
><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=
=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">type</span> <span class=3D"cm-variable">AutoscalingWorkflowPara=
m</span> <span class=3D"cm-keyword">struct</span> {</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" =
cm-text=3D"    ">  </span><span class=3D"cm-variable">SleepFor</span> <span=
 class=3D"cm-keyword">uint</span> &nbsp; <span class=3D"cm-string">`json:"s=
leep_for"`</span></span></pre><pre class=3D" CodeMirror-line " role=3D"pres=
entation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span=
 class=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span cla=
ss=3D"cm-variable">Name</span> &nbsp; &nbsp; <span class=3D"cm-keyword">str=
ing</span> <span class=3D"cm-string">`json:"name"`</span></span></pre><div =
class=3D"" style=3D"position: relative;"><pre class=3D" CodeMirror-line " r=
ole=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.=
1px;">}</span></pre></div></div></div></div></div></div><div style=3D"posit=
ion: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bo=
ttom-style: solid; border-bottom-color: transparent; top: 132px;"></div><di=
v class=3D"CodeMirror-gutters" style=3D"display: none; height: 132px;"></di=
v></div></div></pre><p><span>=E5=90=AF=E5=8A=A8 Worker=EF=BC=9A</span></p><=
pre class=3D"md-fences md-end-block ty-contain-cm modeLoaded" spellcheck=3D=
"false" lang=3D"shell"><div class=3D"CodeMirror cm-s-inner cm-s-null-scroll=
 CodeMirror-wrap" lang=3D"shell"><div style=3D"overflow: hidden; position: =
relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorr=
ect=3D"off" autocapitalize=3D"off" spellcheck=3D"false" tabindex=3D"0" styl=
e=3D"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height:=
 1em; outline: none;"></textarea></div><div class=3D"CodeMirror-scrollbar-f=
iller" cm-not-content=3D"true"></div><div class=3D"CodeMirror-gutter-filler=
" cm-not-content=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=
=3D"-1"><div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-b=
ottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0p=
x;"><div style=3D"position: relative; top: 0px;"><div class=3D"CodeMirror-l=
ines" role=3D"presentation"><div role=3D"presentation" style=3D"position: r=
elative; outline: none;"><div class=3D"CodeMirror-measure"></div><div class=
=3D"CodeMirror-measure"></div><div style=3D"position: relative; z-index: 1;=
"></div><div class=3D"CodeMirror-code" role=3D"presentation"><div class=3D"=
CodeMirror-activeline" style=3D"position: relative;"><div class=3D"CodeMirr=
or-activeline-background CodeMirror-linebackground"></div><div class=3D"Cod=
eMirror-gutter-background CodeMirror-activeline-gutter" style=3D"left: 0px;=
 width: 0px;"></div><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;">go run worker/m=
ain.go </span></pre></div></div></div></div></div></div><div style=3D"posit=
ion: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-bo=
ttom-style: solid; border-bottom-color: transparent; top: 22px;"></div><div=
 class=3D"CodeMirror-gutters" style=3D"display: none; height: 22px;"></div>=
</div></div></pre><p><span>=E5=BC=95=E5=8F=91=E5=B7=A5=E4=BD=9C=E6=B5=81=E6=
=89=A7=E8=A1=8C=EF=BC=9A</span></p><pre class=3D"md-fences md-end-block ty-=
contain-cm modeLoaded" spellcheck=3D"false" lang=3D"shell"><div class=3D"Co=
deMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap" lang=3D"shell"><div s=
tyle=3D"overflow: hidden; position: relative; width: 3px; height: 0px; top:=
 9px; left: 8px;"><textarea autocorrect=3D"off" autocapitalize=3D"off" spel=
lcheck=3D"false" tabindex=3D"0" style=3D"position: absolute; bottom: -1em; =
padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div>=
<div class=3D"CodeMirror-scrollbar-filler" cm-not-content=3D"true"></div><d=
iv class=3D"CodeMirror-gutter-filler" cm-not-content=3D"true"></div><div cl=
ass=3D"CodeMirror-scroll" tabindex=3D"-1"><div class=3D"CodeMirror-sizer" s=
tyle=3D"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padd=
ing-right: 0px; padding-bottom: 0px;"><div style=3D"position: relative; top=
: 0px;"><div class=3D"CodeMirror-lines" role=3D"presentation"><div role=3D"=
presentation" style=3D"position: relative; outline: none;"><div class=3D"Co=
deMirror-measure"></div><div class=3D"CodeMirror-measure"></div><div style=
=3D"position: relative; z-index: 1;"></div><div class=3D"CodeMirror-code" r=
ole=3D"presentation"><div class=3D"CodeMirror-activeline" style=3D"position=
: relative;"><div class=3D"CodeMirror-activeline-background CodeMirror-line=
background"></div><div class=3D"CodeMirror-gutter-background CodeMirror-act=
iveline-gutter" style=3D"left: 0px; width: 0px;"></div><pre class=3D" CodeM=
irror-line " role=3D"presentation"><span role=3D"presentation" style=3D"pad=
ding-right: 0.1px;">go run main.go</span></pre></div></div></div></div></di=
v></div><div style=3D"position: absolute; height: 0px; width: 1px; border-b=
ottom-width: 0px; border-bottom-style: solid; border-bottom-color: transpar=
ent; top: 22px;"></div><div class=3D"CodeMirror-gutters" style=3D"display: =
none; height: 22px;"></div></div></div></pre><p><span>=E5=BE=97=E5=88=B0=E7=
=B1=BB=E4=BC=BC=E4=B8=8B=E9=9D=A2=E7=9A=84=E8=BE=93=E5=87=BA=EF=BC=9A</span=
></p><pre class=3D"md-fences md-end-block ty-contain-cm modeLoaded" spellch=
eck=3D"false" lang=3D""><div class=3D"CodeMirror cm-s-inner cm-s-null-scrol=
l CodeMirror-wrap" lang=3D""><div style=3D"overflow: hidden; position: rela=
tive; width: 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect=
=3D"off" autocapitalize=3D"off" spellcheck=3D"false" tabindex=3D"0" style=
=3D"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: =
1em; outline: none;"></textarea></div><div class=3D"CodeMirror-scrollbar-fi=
ller" cm-not-content=3D"true"></div><div class=3D"CodeMirror-gutter-filler"=
 cm-not-content=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D=
"-1"><div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bott=
om: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"=
><div style=3D"position: relative; top: 0px;"><div class=3D"CodeMirror-line=
s" role=3D"presentation"><div role=3D"presentation" style=3D"position: rela=
tive; outline: none;"><div class=3D"CodeMirror-measure"></div><div class=3D=
"CodeMirror-measure"></div><div style=3D"position: relative; z-index: 1;"><=
/div><div class=3D"CodeMirror-code" role=3D"presentation" style=3D""><div c=
lass=3D"CodeMirror-activeline" style=3D"position: relative;"><div class=3D"=
CodeMirror-activeline-background CodeMirror-linebackground"></div><div clas=
s=3D"CodeMirror-gutter-background CodeMirror-activeline-gutter" style=3D"le=
ft: 0px; width: 0px;"></div><pre class=3D" CodeMirror-line " role=3D"presen=
tation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">XXX Wor=
kflow Id: autoscaling-workflow-4bd8fd21-3a71-40c8-bd86-bccd25070d3e</span><=
/pre></div><pre class=3D" CodeMirror-line " role=3D"presentation"><span rol=
e=3D"presentation" style=3D"padding-right: 0.1px;">XXX Run Id: d7b66047-c8c=
5-4663-a337-1b43d5ba0df5</span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;">current state: waiting timer</span></pre><pre class=3D" CodeMirror-line =
" role=3D"presentation"><span role=3D"presentation" style=3D"padding-right:=
 0.1px;">current state: waiting timer</span></pre><pre class=3D" CodeMirror=
-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-=
right: 0.1px;">current state: waiting timer</span></pre><pre class=3D" Code=
Mirror-line " role=3D"presentation"><span role=3D"presentation" style=3D"pa=
dding-right: 0.1px;">current state: waiting activity</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;">XXX result: map[SayHello:Hello, Tim! SleepFor=
:3]</span></pre></div></div></div></div></div><div style=3D"position: absol=
ute; height: 0px; width: 1px; border-bottom-width: 0px; border-bottom-style=
: solid; border-bottom-color: transparent; top: 154px;"></div><div class=3D=
"CodeMirror-gutters" style=3D"display: none; height: 154px;"></div></div></=
div></pre><p><span>=E4=B8=8A=E9=9D=A2=E7=9A=84=E4=BE=8B=E5=AD=90=E8=AF=B4=
=E6=98=8E=EF=BC=9A=E9=80=9A=E8=BF=87 Query=EF=BC=8C=E5=8F=AF=E4=BB=A5=E8=8E=
=B7=E5=8F=96=E5=B7=A5=E4=BD=9C=E6=B5=81=E6=89=A7=E8=A1=8C=E6=89=A7=E8=A1=8C=
=E5=B7=B2=E6=8E=A8=E8=BF=9B=E5=88=B0=E5=93=AA=E4=B8=AA Activity=E3=80=82=E8=
=AF=B7=E6=9F=A5=E7=9C=8B</span><a href=3D"https://docs.temporal.io/applicat=
ion-development/features/#queries"><span>=E5=AE=98=E6=96=B9=E6=96=87=E6=A1=
=A3</span></a><span>=E8=8E=B7=E5=8F=96=E6=9B=B4=E5=A4=9A=E5=85=B3=E4=BA=8E =
Query =E7=9A=84=E7=BB=86=E8=8A=82=E3=80=82</span></p><h5 id=3D"22-=E9=80=9A=
=E8=BF=87-temporal-client-=E8=8E=B7=E5=8F=96=E6=AD=A3=E5=9C=A8=E6=89=93=E5=
=BC=80=E7=9A=84-workflow-execution"><span>2.2. =E9=80=9A=E8=BF=87 Temporal =
Client =E8=8E=B7=E5=8F=96=E6=AD=A3=E5=9C=A8=E6=89=93=E5=BC=80=E7=9A=84 Work=
flow Execution</span></h5><p><span>=E4=B8=8B=E9=9D=A2=E9=80=9A=E8=BF=87=E7=
=A4=BA=E4=BE=8B=E8=BF=9B=E8=A1=8C=E8=AF=B4=E6=98=8E=E3=80=82</span></p><p><=
span>list</span><span>_</span><span>open</span><span>_</span><span>workflow=
</span><span>_</span><span>execution.go=EF=BC=9A</span></p><pre class=3D"md=
-fences md-end-block ty-contain-cm modeLoaded" spellcheck=3D"false" lang=3D=
"go" style=3D"break-inside: unset;"><div class=3D"CodeMirror cm-s-inner cm-=
s-null-scroll CodeMirror-wrap" lang=3D"go"><div style=3D"overflow: hidden; =
position: relative; width: 3px; height: 0px; top: 9px; left: 8px;"><textare=
a autocorrect=3D"off" autocapitalize=3D"off" spellcheck=3D"false" tabindex=
=3D"0" style=3D"position: absolute; bottom: -1em; padding: 0px; width: 1000=
px; height: 1em; outline: none;"></textarea></div><div class=3D"CodeMirror-=
scrollbar-filler" cm-not-content=3D"true"></div><div class=3D"CodeMirror-gu=
tter-filler" cm-not-content=3D"true"></div><div class=3D"CodeMirror-scroll"=
 tabindex=3D"-1"><div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px;=
 margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-b=
ottom: 0px;"><div style=3D"position: relative; top: 0px;"><div class=3D"Cod=
eMirror-lines" role=3D"presentation"><div role=3D"presentation" style=3D"po=
sition: relative; outline: none;"><div class=3D"CodeMirror-measure"><pre><s=
pan>xxxxxxxxxx</span></pre></div><div class=3D"CodeMirror-measure"></div><d=
iv style=3D"position: relative; z-index: 1;"></div><div class=3D"CodeMirror=
-code" role=3D"presentation" style=3D""><div class=3D"CodeMirror-activeline=
" style=3D"position: relative;"><div class=3D"CodeMirror-activeline-backgro=
und CodeMirror-linebackground"></div><div class=3D"CodeMirror-gutter-backgr=
ound CodeMirror-activeline-gutter" style=3D"left: 0px; width: 0px;"></div><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;"><span class=3D"cm-keyword">package</=
span> <span class=3D"cm-variable">main</span></span></pre></div><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">import</span> (</span></pre><pre class=3D" CodeMirror-line " ro=
le=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1=
px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span>=
<span class=3D"cm-string">"context"</span></span></pre><pre class=3D" CodeM=
irror-line " role=3D"presentation"><span role=3D"presentation" style=3D"pad=
ding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D=
"   ">  </span><span class=3D"cm-string">"fmt"</span></span></pre><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation"=
 cm-text=3D"   ">  </span><span class=3D"cm-string">"go.temporal.io/api/fil=
ter/v1"</span></span></pre><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cl=
ass=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D=
"cm-string">"go.temporal.io/api/workflowservice/v1"</span></span></pre><pre=
 class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentati=
on" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presenta=
tion" cm-text=3D" ">  </span><span class=3D"cm-string">"go.temporal.io/sdk/=
client"</span></span></pre><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cl=
ass=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"=
cm-string">"log"</span></span></pre><pre class=3D" CodeMirror-line " role=
=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px=
;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><s=
pan class=3D"cm-string">"time"</span></span></pre><pre class=3D" CodeMirror=
-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-=
right: 0.1px;">)</span></pre><pre class=3D" CodeMirror-line " role=3D"prese=
ntation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span =
cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-keyword">func</span> <span class=3D"cm-variable">main</span>() {</span><=
/pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"p=
resentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D=
"presentation" cm-text=3D" ">  </span><span class=3D"cm-variable">c</span>,=
 <span class=3D"cm-variable">err</span> :<span class=3D"cm-operator">=3D</s=
pan> <span class=3D"cm-variable">client</span><span class=3D"cm-number">.</=
span><span class=3D"cm-variable">Dial</span>(<span class=3D"cm-variable">cl=
ient</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Op=
tions</span>{</span></pre><pre class=3D" CodeMirror-line " role=3D"presenta=
tion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-var=
iable">HostPort</span>: &nbsp;<span class=3D"cm-string">"127.0.0.1:7233"</s=
pan>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm=
-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab" =
role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">=
Namespace</span>: <span class=3D"cm-string">"default"</span>,</span></pre><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"prese=
ntation" cm-text=3D"  ">  </span>})</span></pre><pre class=3D" CodeMirror-l=
ine " role=3D"presentation"><span role=3D"presentation" style=3D"padding-ri=
ght: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  <=
/span><span class=3D"cm-keyword">if</span> <span class=3D"cm-variable">err<=
/span> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil<=
/span> {</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"=
><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D=
"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D"cm-tab=
" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable=
">log</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">F=
atalln</span>(<span class=3D"cm-string">"unable to create Temporal client"<=
/span>, <span class=3D"cm-variable">err</span>)</span></pre><pre class=3D" =
CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"  ">  </span>}</span></pre><pre class=3D" CodeMirror-line " role=3D=
"presentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">=
<span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span =
class=3D"cm-keyword">defer</span> <span class=3D"cm-variable">c</span><span=
 class=3D"cm-number">.</span><span class=3D"cm-variable">Close</span>()</sp=
an></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zws=
p=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">listOpenWorkflowExecutionContext</span>, <span class=3D"cm-variable=
">cancelFunc</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"=
cm-variable">context</span><span class=3D"cm-number">.</span><span class=3D=
"cm-variable">WithTimeout</span>(<span class=3D"cm-variable">context</span>=
<span class=3D"cm-number">.</span><span class=3D"cm-variable">Background</s=
pan>(), <span class=3D"cm-variable">time</span><span class=3D"cm-number">.<=
/span><span class=3D"cm-variable">Minute</span>)</span></pre><pre class=3D"=
 CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"   ">  </span><span class=3D"cm-keyword">defer</span> <span class=
=3D"cm-variable">cancelFunc</span>()</span></pre><pre class=3D" CodeMirror-=
line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-r=
ight: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"    "=
>  </span><span class=3D"cm-variable">listOpenWorkflowExecutionRequest</spa=
n> :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-operator">&amp=
;</span><span class=3D"cm-variable">workflowservice</span><span class=3D"cm=
-number">.</span><span class=3D"cm-variable">ListOpenWorkflowExecutionsRequ=
est</span>{</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-va=
riable">Namespace</span>: &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"d=
efault"</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presen=
tation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=3D=
"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-v=
ariable">MaximumPageSize</span>: <span class=3D"cm-number">1</span>,</span>=
</pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"=
presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D"    ">  </span><span class=3D"cm-tab" role=3D"=
presentation" cm-text=3D"   ">  </span><span class=3D"cm-variable">Filters<=
/span>: <span class=3D"cm-operator">&amp;</span><span class=3D"cm-variable"=
>workflowservice</span><span class=3D"cm-number">.</span><span class=3D"cm-=
variable">ListOpenWorkflowExecutionsRequest_TypeFilter</span>{</span></pre>=
<pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presen=
tation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"pres=
entation" cm-text=3D" ">  </span><span class=3D"cm-tab" role=3D"presentatio=
n" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm=
-text=3D"   ">  </span><span class=3D"cm-variable">TypeFilter</span>: <span=
 class=3D"cm-operator">&amp;</span><span class=3D"cm-variable">filter</span=
><span class=3D"cm-number">.</span><span class=3D"cm-variable">WorkflowType=
Filter</span>{<span class=3D"cm-variable">Name</span>: <span class=3D"cm-st=
ring">"AutoscalingWorkflowDefinition"</span>},</span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-tex=
t=3D"  ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" =
  ">  </span>},</span></pre><pre class=3D" CodeMirror-line " role=3D"presen=
tation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span c=
lass=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span>}</span></pre>=
<pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presen=
tation" style=3D"padding-right: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-ke=
yword">for</span> {</span></pre><pre class=3D" CodeMirror-line " role=3D"pr=
esentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><sp=
an class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D=
"cm-variable">listOpenWorkflowExecutionResponse</span>, <span class=3D"cm-v=
ariable">err</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"=
cm-variable">c</span><span class=3D"cm-number">.</span><span class=3D"cm-va=
riable">ListOpenWorkflow</span>(</span></pre><pre class=3D" CodeMirror-line=
 " role=3D"presentation"><span role=3D"presentation" style=3D"padding-right=
: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </s=
pan><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><=
span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span =
class=3D"cm-variable">listOpenWorkflowExecutionContext</span>,</span></pre>=
<pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presen=
tation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"pres=
entation" cm-text=3D" ">  </span><span class=3D"cm-tab" role=3D"presentatio=
n" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm=
-text=3D"   ">  </span><span class=3D"cm-variable">listOpenWorkflowExecutio=
nRequest</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"prese=
ntation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span =
class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span>)</span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presen=
tation" cm-text=3D"  ">  </span><span class=3D"cm-tab" role=3D"presentation=
" cm-text=3D"   ">  </span><span class=3D"cm-keyword">if</span> <span class=
=3D"cm-variable">err</span> <span class=3D"cm-operator">!=3D</span> <span c=
lass=3D"cm-atom">nil</span> {</span></pre><pre class=3D" CodeMirror-line " =
role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0=
.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" ">  </span>=
<span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span=
 class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span clas=
s=3D"cm-atom">panic</span>(<span class=3D"cm-variable">err</span>)</span></=
pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pr=
esentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"=
presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"prese=
ntation" cm-text=3D"   ">  </span>}</span></pre><pre class=3D" CodeMirror-l=
ine " role=3D"presentation"><span role=3D"presentation" style=3D"padding-ri=
ght: 0.1px;"><span cm-text=3D"" cm-zwsp=3D"">
</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"=
cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-ta=
b" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-keyword=
">if</span> <span class=3D"cm-variable">listOpenWorkflowExecutionResponse</=
span> <span class=3D"cm-operator">!=3D</span> <span class=3D"cm-atom">nil</=
span> <span class=3D"cm-operator">&amp;&amp;</span> <span class=3D"cm-varia=
ble">listOpenWorkflowExecutionResponse</span><span class=3D"cm-number">.</s=
pan><span class=3D"cm-variable">Executions</span> <span class=3D"cm-operato=
r">!=3D</span> <span class=3D"cm-atom">nil</span> {</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" =
cm-text=3D"    ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-t=
ext=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"   ">  </span><span class=3D"cm-keyword">for</span> <span class=3D"cm-v=
ariable">_</span>, <span class=3D"cm-variable">execution</span> :<span clas=
s=3D"cm-operator">=3D</span> <span class=3D"cm-keyword">range</span> <span =
class=3D"cm-variable">listOpenWorkflowExecutionResponse</span><span class=
=3D"cm-number">.</span><span class=3D"cm-variable">Executions</span> {</spa=
n></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" ro=
le=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D=
"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"pres=
entation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentat=
ion" cm-text=3D"   ">  </span><span class=3D"cm-variable">workflowId</span>=
 :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-variable">execut=
ion</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Exe=
cution</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">=
WorkflowId</span></span></pre><pre class=3D" CodeMirror-line " role=3D"pres=
entation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span=
 class=3D"cm-tab" role=3D"presentation" cm-text=3D"    ">  </span><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D=
"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-t=
ab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-variab=
le">runId</span> :<span class=3D"cm-operator">=3D</span> <span class=3D"cm-=
variable">execution</span><span class=3D"cm-number">.</span><span class=3D"=
cm-variable">Execution</span><span class=3D"cm-number">.</span><span class=
=3D"cm-variable">RunId</span></span></pre><pre class=3D" CodeMirror-line " =
role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0=
.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span=
><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><spa=
n class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span cla=
ss=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D=
"cm-variable">status</span> :<span class=3D"cm-operator">=3D</span> <span c=
lass=3D"cm-variable">execution</span><span class=3D"cm-number">.</span><spa=
n class=3D"cm-variable">Status</span></span></pre><pre class=3D" CodeMirror=
-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding-=
right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">=
  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </s=
pan><span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><=
span class=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span =
class=3D"cm-variable">fmt</span><span class=3D"cm-number">.</span><span cla=
ss=3D"cm-variable">Printf</span>(<span class=3D"cm-string">"Workflow Id: %s=
, Run Id: %s, status: %d\n"</span>, <span class=3D"cm-variable">workflowId<=
/span>, <span class=3D"cm-variable">runId</span>, <span class=3D"cm-variabl=
e">status</span>)</span></pre><pre class=3D" CodeMirror-line " role=3D"pres=
entation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span=
 class=3D"cm-tab" role=3D"presentation" cm-text=3D"  ">  </span><span class=
=3D"cm-tab" role=3D"presentation" cm-text=3D"   ">  </span><span class=3D"c=
m-tab" role=3D"presentation" cm-text=3D"   ">  </span>}</span></pre><pre cl=
ass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation"=
 style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentatio=
n" cm-text=3D"  ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-=
text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presentation" cm-text=
=3D"   ">  </span><span class=3D"cm-variable">listOpenWorkflowExecutionRequ=
est</span><span class=3D"cm-number">.</span><span class=3D"cm-variable">Nex=
tPageToken</span> <span class=3D"cm-operator">=3D</span> <span class=3D"cm-=
variable">listOpenWorkflowExecutionResponse</span><span class=3D"cm-number"=
>.</span><span class=3D"cm-variable">NextPageToken</span></span></pre><pre =
class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentatio=
n" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentat=
ion" cm-text=3D"    ">  </span><span class=3D"cm-tab" role=3D"presentation"=
 cm-text=3D"   ">  </span>} <span class=3D"cm-keyword">else</span> {</span>=
</pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"=
presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" role=
=3D"presentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"p=
resentation" cm-text=3D"   ">  </span><span class=3D"cm-tab" role=3D"presen=
tation" cm-text=3D"   ">  </span><span class=3D"cm-keyword">break</span></s=
pan></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-tab" ro=
le=3D"presentation" cm-text=3D"  ">  </span><span class=3D"cm-tab" role=3D"=
presentation" cm-text=3D"   ">  </span>}</span></pre><pre class=3D" CodeMir=
ror-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddi=
ng-right: 0.1px;"><span class=3D"cm-tab" role=3D"presentation" cm-text=3D" =
 ">  </span>}</span></pre><div class=3D"" style=3D"position: relative;"><pr=
e class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentat=
ion" style=3D"padding-right: 0.1px;">}</span></pre></div></div></div></div>=
</div></div><div style=3D"position: absolute; height: 0px; width: 1px; bord=
er-bottom-width: 0px; border-bottom-style: solid; border-bottom-color: tran=
sparent; top: 1188px;"></div><div class=3D"CodeMirror-gutters" style=3D"dis=
play: none; height: 1188px;"></div></div></div></pre><p><span>=E7=84=B6=E5=
=90=8E=E9=80=9A=E8=BF=87=E7=A8=8B=E5=BA=8F=E6=88=96 </span><code>tctl</code=
><span> =E5=BC=95=E5=8F=91=E8=8B=A5=E5=B9=B2=E5=B7=A5=E4=BD=9C=E6=B5=81=E6=
=89=A7=E8=A1=8C=E3=80=82=E6=9C=80=E7=BB=88=E5=BE=97=E5=88=B0=E7=B1=BB=E4=BC=
=BC=E4=B8=8B=E9=9D=A2=E7=9A=84=E8=BE=93=E5=87=BA=EF=BC=9A</span></p><pre cl=
ass=3D"md-fences md-end-block ty-contain-cm modeLoaded" spellcheck=3D"false=
" lang=3D""><div class=3D"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror=
-wrap" lang=3D""><div style=3D"overflow: hidden; position: relative; width:=
 3px; height: 0px; top: 9px; left: 8px;"><textarea autocorrect=3D"off" auto=
capitalize=3D"off" spellcheck=3D"false" tabindex=3D"0" style=3D"position: a=
bsolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: n=
one;"></textarea></div><div class=3D"CodeMirror-scrollbar-filler" cm-not-co=
ntent=3D"true"></div><div class=3D"CodeMirror-gutter-filler" cm-not-content=
=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D"-1"><div class=
=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bottom: 0px; border=
-right-width: 0px; padding-right: 0px; padding-bottom: 0px;"><div style=3D"=
position: relative; top: 0px;"><div class=3D"CodeMirror-lines" role=3D"pres=
entation"><div role=3D"presentation" style=3D"position: relative; outline: =
none;"><div class=3D"CodeMirror-measure"><pre>x</pre></div><div class=3D"Co=
deMirror-measure"></div><div style=3D"position: relative; z-index: 1;"></di=
v><div class=3D"CodeMirror-code" role=3D"presentation" style=3D""><div clas=
s=3D"CodeMirror-activeline" style=3D"position: relative;"><div class=3D"Cod=
eMirror-activeline-background CodeMirror-linebackground"></div><div class=
=3D"CodeMirror-gutter-background CodeMirror-activeline-gutter" style=3D"lef=
t: 0px; width: 0px;"></div><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;">Workflow=
 Id: autoscaling-workflow-8674ad58-6fe4-4f4e-942f-6b33b5955ae7, Run Id: 7ca=
d7413-6cf2-4445-8446-66bae321dffe, status: 1</span></pre></div><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;">Workflow Id: autoscaling-workflow-45d51ed0-00=
e1-4203-be6b-f504e5cb968e, Run Id: 3c20c391-e85b-4d9a-9cec-7fe4ca7ebae5, st=
atus: 1</span></pre><div class=3D"" style=3D"position: relative;"><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;">Workflow Id: autoscaling-workflow-ce865963-b=
6c5-4ce2-973e-126fdd02ff70, Run Id: 9f37d87f-2419-45b5-bd56-8c34e203c995, s=
tatus: 1</span></pre></div></div></div></div></div></div><div style=3D"posi=
tion: absolute; height: 0px; width: 1px; border-bottom-width: 0px; border-b=
ottom-style: solid; border-bottom-color: transparent; top: 132px;"></div><d=
iv class=3D"CodeMirror-gutters" style=3D"display: none; height: 132px;"></d=
iv></div></div></pre><h5 id=3D"23-=E5=A6=82=E4=BD=95=E5=9F=BA=E4=BA=8E-work=
flow-execution-=E5=BC=B9=E6=80=A7=E4=BC=B8=E7=BC=A9-worker"><span>2.3. =E5=
=A6=82=E4=BD=95=E5=9F=BA=E4=BA=8E Workflow Execution =E5=BC=B9=E6=80=A7=E4=
=BC=B8=E7=BC=A9 Worker</span></h5><ol><li><span>=E9=80=9A=E8=BF=87 Temporal=
 Client =E8=8E=B7=E5=8F=96=E5=85=B3=E6=B3=A8=E7=9A=84 Workflow Definition =
=E7=9A=84=E5=85=A8=E9=83=A8 Workflow Execution=EF=BC=88=E5=8F=AF=E5=9F=BA=
=E4=BA=8E Workflow Execution =E7=9A=84=E6=80=BB=E6=95=B0 Autoscale Workflow=
 Worker=EF=BC=89</span></li><li><span>=E9=80=9A=E8=BF=87 Query =E9=80=90=E4=
=B8=80=E5=9C=B0=E8=8E=B7=E5=8F=96=E5=85=A8=E9=83=A8 Workflow Execution =E7=
=9A=84=E8=BF=9B=E5=B1=95=EF=BC=88=E5=B7=B2=E6=8E=A8=E8=BF=9B=E5=88=B0=E5=93=
=AA=E4=B8=AA Activity=EF=BC=89</span></li><li><span>=E9=80=9A=E8=BF=87=E4=
=B8=8A=E4=B8=80=E6=AD=A5=E8=8E=B7=E5=8F=96=E5=88=B0=E7=9A=84=E8=BF=9B=E5=B1=
=95=EF=BC=8C=E7=BB=9F=E8=AE=A1=E5=87=BA=E6=89=80=E6=9C=89 Activity =E7=9A=
=84=E6=95=B0=E9=87=8F=EF=BC=8C=E7=84=B6=E5=90=8E=E5=9F=BA=E4=BA=8E=E5=AE=83=
 Autoscale Activity Woker</span></li></ol></div></div>


</body></html>
------MultipartBoundary--SuIEtYjZFjmMXIM5TqTSfIbEkTNEm2HBBCDxoovvzb----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8c9a6218-459f-4e90-aba9-0d3d5f81b21f@mhtml.blink

@charset "utf-8";

html { overflow-x: initial !important; }

:root { --bg-color: #ffffff; --text-color: #333333; --select-text-bg-color:=
 #B5D6FC; --select-text-font-color: auto; --monospace: "Lucida Console",Con=
solas,"Courier",monospace; --title-bar-height: 20px; }

.mac-os-11 { --title-bar-height: 28px; }

html { font-size: 14px; background-color: var(--bg-color); color: var(--tex=
t-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -web=
kit-font-smoothing: antialiased; }

body { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem=
; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: =
4; }

iframe { margin: auto; }

a.url { word-break: break-all; }

a:active, a:hover { outline: 0px; }

.in-text-selection, ::selection { text-shadow: none; background: var(--sele=
ct-text-bg-color); color: var(--select-text-font-color); }

#write { margin: 0px auto; height: auto; width: inherit; word-break: normal=
; overflow-wrap: break-word; position: relative; white-space: normal; overf=
low-x: visible; padding-top: 36px; }

#write.first-line-indent p { text-indent: 2em; }

#write.first-line-indent li p, #write.first-line-indent p * { text-indent: =
0px; }

#write.first-line-indent li { margin-left: 2em; }

.for-image #write { padding-left: 8px; padding-right: 8px; }

body.typora-export { padding-left: 30px; padding-right: 30px; }

.typora-export .footnote-line, .typora-export li, .typora-export p { white-=
space: pre-wrap; }

.typora-export .task-list-item input { pointer-events: none; }

@media screen and (max-width: 500px) {
  body.typora-export { padding-left: 0px; padding-right: 0px; }
  #write { padding-left: 20px; padding-right: 20px; }
}

#write li > figure:last-child { margin-bottom: 0.5rem; }

#write ol, #write ul { position: relative; }

img { max-width: 100%; vertical-align: middle; image-orientation: from-imag=
e; }

button, input, select, textarea { color: inherit; font-family: inherit; fon=
t-size: inherit; font-style: inherit; font-variant-caps: inherit; font-weig=
ht: inherit; font-stretch: inherit; line-height: inherit; }

input[type=3D"checkbox"], input[type=3D"radio"] { line-height: normal; padd=
ing: 0px; }

*, ::after, ::before { box-sizing: border-box; }

#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p,=
 #write pre { width: inherit; }

#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p =
{ position: relative; }

p { line-height: inherit; }

h1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orph=
ans: 4; }

p { orphans: 4; }

h1 { font-size: 2rem; }

h2 { font-size: 1.8rem; }

h3 { font-size: 1.6rem; }

h4 { font-size: 1.4rem; }

h5 { font-size: 1.2rem; }

h6 { font-size: 1rem; }

.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem;=
 margin-bottom: 1rem; }

.hidden { display: none; }

.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: it=
alic; }

a { cursor: pointer; }

sup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0=
.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }

sup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform=
: inherit; text-decoration: inherit; }

#write input[type=3D"checkbox"] { cursor: pointer; width: inherit; height: =
inherit; }

figure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px);=
 padding: 0px; }

figure > table { margin: 0px; }

thead, tr { break-inside: avoid; break-after: auto; }

thead { display: table-header-group; }

table { border-collapse: collapse; border-spacing: 0px; width: 100%; overfl=
ow: auto; break-inside: auto; text-align: left; }

table.md-table td { min-width: 32px; }

.CodeMirror-gutters { border-right-width: 0px; background-color: inherit; }

.CodeMirror-linenumber { }

.CodeMirror { text-align: left; }

.CodeMirror-placeholder { opacity: 0.3; }

.CodeMirror pre { padding: 0px 4px; }

.CodeMirror-lines { padding: 0px; }

div.hr:focus { cursor: none; }

#write pre { white-space: pre-wrap; }

#write.fences-no-line-wrapping pre { white-space: pre; }

#write pre.ty-contain-cm { white-space: normal; }

.CodeMirror-gutters { margin-right: 4px; }

.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-a=
lign: left; overflow: visible; white-space: pre; background: inherit; posit=
ion: relative !important; }

.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; p=
adding-top: 0px; padding-bottom: 8px; overflow-x: auto; }

#write .md-fences.mock-cm { white-space: pre-wrap; }

.md-fences.md-fences-with-lineno { padding-left: 0px; }

#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overf=
low-x: auto; }

.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }

.CodeMirror-line, twitterwidget { break-inside: avoid; }

svg { break-inside: avoid; }

.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-botto=
m: 1em; }

.footnotes + .footnotes { margin-top: 0px; }

.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-=
align: top; text-decoration: none; text-shadow: none; float: none; position=
: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; =
line-height: normal; font-weight: 400; text-align: left; box-sizing: conten=
t-box; direction: ltr; background-position: 0px 0px; }

li div { padding-top: 0px; }

blockquote { margin: 1rem 0px; }

li .mathjax-block, li p { margin: 0.5rem 0px; }

li blockquote { margin: 1rem 0px; }

li { margin: 0px; position: relative; }

blockquote > :last-child { margin-bottom: 0px; }

blockquote > :first-child, li > :first-child { margin-top: 0px; }

.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-=
bottom: 0.143rem; white-space: normal; }

#write .footnote-line { white-space: pre-wrap; }

@media print {
  body, html { border: 1px solid transparent; height: 99%; break-after: avo=
id; break-before: avoid; font-variant-ligatures: no-common-ligatures; }
  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !im=
portant; padding-bottom: 0px !important; }
  .typora-export * { -webkit-print-color-adjust: exact; }
  .typora-export #write { break-after: avoid; }
  .typora-export #write::after { height: 0px; }
  .is-mac table { break-inside: avoid; }
  .typora-export-show-outline .typora-export-sidebar { display: none; }
}

.footnote-line { margin-top: 0.714em; font-size: 0.7em; }

a img, img a { cursor: pointer; }

pre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre=
-wrap; background-color: rgb(204, 204, 204); display: block; overflow-x: hi=
dden; }

p > .md-image:only-child:not(.md-img-error) img, p > img:only-child { displ=
ay: block; margin: auto; }

#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { =
left: -2em; position: relative; }

p > .md-image:only-child { display: inline-block; width: 100%; }

#write .MathJax_Display { margin: 0.8em 0px 0px; }

.md-math-block { width: 100%; }

.md-math-block:not(:empty)::after { display: none; }

.MathJax_ref { fill: currentcolor; }

[contenteditable=3D"true"]:active, [contenteditable=3D"true"]:focus, [conte=
nteditable=3D"false"]:active, [contenteditable=3D"false"]:focus { outline: =
0px; box-shadow: none; }

.md-task-list-item { position: relative; list-style-type: none; }

.task-list-item.md-task-list-item { padding-left: 0px; }

.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margi=
n-left: -1.2em; margin-top: calc(1em - 10px); border: none; }

.math { font-size: 1rem; }

.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; borde=
r-radius: 10px; }

.md-toc-content { position: relative; margin-left: 0px; }

.md-toc-content::after, .md-toc::after { display: none; }

.md-toc-item { display: block; color: rgb(65, 131, 196); }

.md-toc-item a { text-decoration: none; }

.md-toc-inner:hover { text-decoration: underline; }

.md-toc-inner { display: inline-block; cursor: pointer; }

.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }

.md-toc-h2 .md-toc-inner { margin-left: 2em; }

.md-toc-h3 .md-toc-inner { margin-left: 4em; }

.md-toc-h4 .md-toc-inner { margin-left: 6em; }

.md-toc-h5 .md-toc-inner { margin-left: 8em; }

.md-toc-h6 .md-toc-inner { margin-left: 10em; }

@media screen and (max-width: 48em) {
  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }
  .md-toc-h4 .md-toc-inner { margin-left: 5em; }
  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }
  .md-toc-h6 .md-toc-inner { margin-left: 8em; }
}

a.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inhe=
rit; line-height: inherit; }

.footnote-line a:not(.reversefootnote) { color: inherit; }

.reversefootnote { font-family: ui-monospace, sans-serif; }

.md-attr { display: none; }

.md-fn-count::after { content: "."; }

code, pre, samp, tt { font-family: var(--monospace); }

kbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb=
(36, 39, 41); background-color: rgb(255, 255, 255); border: 1px solid rgb(1=
73, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1p=
x 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; verti=
cal-align: middle; }

.md-comment { color: rgb(162, 127, 3); opacity: 0.6; font-family: var(--mon=
ospace); }

code { text-align: left; }

a.md-print-anchor { white-space: pre !important; border: none !important; d=
isplay: inline-block !important; position: absolute !important; width: 1px =
!important; right: 0px !important; outline: 0px !important; text-shadow: in=
itial !important; background-position: 0px 0px !important; }

.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", san=
s-serif; }

.md-diagram-panel > svg { max-width: 100%; }

[lang=3D"flow"] svg, [lang=3D"mermaid"] svg { max-width: 100%; height: auto=
; }

[lang=3D"mermaid"] .node text { font-size: 1rem; }

table tr th { border-bottom-width: 0px; }

video { max-width: 100%; display: block; margin: 0px auto; }

iframe { max-width: 100%; width: 100%; border: none; }

.highlight td, .highlight tr { border: 0px; }

mark { background-color: rgb(255, 255, 0); color: rgb(0, 0, 0); }

.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, ma=
rk strong { color: inherit; }

.md-expand mark .md-meta { opacity: 0.3 !important; }

mark .md-meta { color: rgb(0, 0, 0); }

@media print {
  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h=
4, .typora-export h5, .typora-export h6 { break-inside: avoid; }
}

.md-diagram-panel .messageText { stroke: none !important; }

.md-diagram-panel .start-state { fill: var(--node-fill); }

.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }

.md-fences.md-fences-math { font-size: 1em; }

.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; bor=
der: 0px; }

.md-fences-advanced:not(.md-focus) { background: inherit; }

.typora-export-show-outline .typora-export-content { max-width: 1440px; mar=
gin: auto; display: flex; flex-direction: row; }

.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px;=
 margin-right: 18px; }

.typora-export-show-outline #write { --webkit-flex: 2; flex: 2 1 0%; }

.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-he=
ight: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px;=
 width: 300px; }

@media screen and (max-width: 1024px) {
  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: =
240px; }
}

@media screen and (max-width: 800px) {
  .typora-export-sidebar { display: none; }
}

.outline-content li, .outline-content ul { margin-left: 0px; margin-right: =
0px; padding-left: 0px; padding-right: 0px; list-style: none; }

.outline-content ul { margin-top: 0px; margin-bottom: 0px; }

.outline-content strong { font-weight: 400; }

.outline-expander { width: 1rem; height: 1.42857rem; position: relative; di=
splay: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4=
px; }

.outline-expander::before { content: "=EF=84=A5"; position: relative; font-=
family: Ionicons; display: inline-block; font-size: 8px; vertical-align: mi=
ddle; }

.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }

.outline-expander:hover::before { content: "=EF=84=A3"; }

.outline-h1 > .outline-item { padding-left: 0px; }

.outline-h2 > .outline-item { padding-left: 1em; }

.outline-h3 > .outline-item { padding-left: 2em; }

.outline-h4 > .outline-item { padding-left: 3em; }

.outline-h5 > .outline-item { padding-left: 4em; }

.outline-h6 > .outline-item { padding-left: 5em; }

.outline-label { cursor: pointer; display: table-cell; vertical-align: midd=
le; text-decoration: none; color: inherit; }

.outline-label:hover { text-decoration: underline; }

.outline-item:hover { border-color: rgb(245, 245, 245); background-color: v=
ar(--item-hover-bg-color); }

.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left:=
 28px solid transparent; border-right: 28px solid transparent; }

.outline-item-single .outline-expander::before, .outline-item-single .outli=
ne-expander:hover::before { display: none; }

.outline-item-open > .outline-item > .outline-expander::before { content: "=
=EF=84=A3"; }

.outline-children { display: none; }

.info-panel-tab-wrapper { display: none; }

.outline-item-open > .outline-children { display: block; }

.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }

.typora-export .outline-item:hover { margin-right: -8px; border-right: 8px =
solid transparent; }

.typora-export .outline-expander::before { content: "+"; font-family: inher=
it; top: -1px; }

.typora-export .outline-expander:hover::before, .typora-export .outline-ite=
m-open > .outline-item > .outline-expander::before { content: "=E2=88=92"; =
}

.typora-export-collapse-outline .outline-children { display: none; }

.typora-export-collapse-outline .outline-item-open > .outline-children, .ty=
pora-export-no-collapse-outline .outline-children { display: block; }

.typora-export-no-collapse-outline .outline-expander::before { content: "" =
!important; }

.typora-export-show-outline .outline-item-active > .outline-item .outline-l=
abel { font-weight: 700; }

.md-inline-math-container mjx-container { zoom: 0.95; }

.CodeMirror { height: auto; }

.CodeMirror.cm-s-inner { background: inherit; }

.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }

.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color:=
 rgb(255, 255, 255); }

.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); backgroun=
d: inherit; white-space: nowrap; }

.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color=
: rgb(153, 153, 153); }

.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }

.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }

.cm-s-inner .cm-number { color: rgb(17, 102, 68); }

.cm-s-inner .cm-def { color: rgb(0, 0, 255); }

.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }

.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }

.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }

.cm-s-inner .cm-string { color: rgb(170, 17, 17); }

.cm-s-inner .cm-property { color: rgb(0, 0, 0); }

.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }

.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }

.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }

.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }

.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }

.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }

.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }

.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }

.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }

.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }

.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }

.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }

.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }

.cm-negative { color: rgb(221, 68, 68); }

.cm-positive { color: rgb(34, 153, 34); }

.cm-header, .cm-strong { font-weight: 700; }

.cm-del { text-decoration: line-through; }

.cm-em { font-style: italic; }

.cm-link { text-decoration: underline; }

.cm-error { color: red; }

.cm-invalidchar { color: red; }

.cm-constant { color: rgb(38, 139, 210); }

.cm-defined { color: rgb(181, 137, 0); }

div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }

div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34)=
; }

.cm-s-inner .CodeMirror-activeline-background { background: inherit; }

.CodeMirror { position: relative; overflow: hidden; }

.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-si=
zing: content-box; background: inherit; }

.CodeMirror-sizer { position: relative; }

.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-fi=
ller, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: non=
e; outline: 0px; }

.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }

.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }

.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }

.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }

.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bott=
om: 10px; z-index: 3; overflow-y: hidden; }

.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content=
-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }

.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; border: none !=
important; background-position: 0px 0px !important; }

.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; =
z-index: 4; }

.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }

.CodeMirror-lines { cursor: text; }

.CodeMirror pre { border-radius: 0px; border-width: 0px; font-family: inher=
it; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: norma=
l; color: inherit; z-index: 2; position: relative; overflow: visible; backg=
round-position: 0px 0px; }

.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; wo=
rd-break: normal; }

.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-con=
tent; }

.CodeMirror-wrap .CodeMirror-code pre { border-right-style: none; width: au=
to; }

.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }

.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }

.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }

.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflo=
w: hidden; visibility: hidden; }

.CodeMirror-measure pre { position: static; }

.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden;=
 border-right-style: none; width: 0px; }

.CodeMirror div.CodeMirror-cursor { visibility: hidden; }

.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }

.cm-searching { background-color: rgba(255, 255, 0, 0.4); }

span.cm-underlined { text-decoration: underline; }

span.cm-strikethrough { text-decoration: line-through; }

.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, =
0, 0); }

.cm-tw-deleted { text-decoration: line-through; }

.cm-tw-header5 { font-weight: 700; }

.cm-tw-listitem:first-child { padding-left: 10px; }

.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-wi=
dth: 1px; border-left-width: 1px; border-color: inherit; border-top-width: =
0px !important; }

.cm-tw-underline { text-decoration: underline; }

@media print {
  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }
}

:root { --side-bar-bg-color: #fafafa; --control-text-color: #777; }

html { font-size: 16px; -webkit-font-smoothing: antialiased; }

body { font-family: "Open Sans", "Clear Sans", "Helvetica Neue", Helvetica,=
 Arial, "Segoe UI Emoji", sans-serif; color: rgb(51, 51, 51); line-height: =
1.6; }

#write { max-width: 860px; margin: 0px auto; padding: 30px 30px 100px; }

@media only screen and (min-width: 1400px) {
  #write { max-width: 1024px; }
}

@media only screen and (min-width: 1800px) {
  #write { max-width: 1200px; }
}

#write > ul:first-child, #write > ol:first-child { margin-top: 30px; }

a { color: rgb(65, 131, 196); }

h1, h2, h3, h4, h5, h6 { position: relative; margin-top: 1rem; margin-botto=
m: 1rem; font-weight: bold; line-height: 1.4; cursor: text; }

h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor,=
 h5:hover a.anchor, h6:hover a.anchor { text-decoration: none; }

h1 tt, h1 code { font-size: inherit; }

h2 tt, h2 code { font-size: inherit; }

h3 tt, h3 code { font-size: inherit; }

h4 tt, h4 code { font-size: inherit; }

h5 tt, h5 code { font-size: inherit; }

h6 tt, h6 code { font-size: inherit; }

h1 { font-size: 2.25em; line-height: 1.2; border-bottom: 1px solid rgb(238,=
 238, 238); }

h2 { font-size: 1.75em; line-height: 1.225; border-bottom: 1px solid rgb(23=
8, 238, 238); }

h3 { font-size: 1.5em; line-height: 1.43; }

h4 { font-size: 1.25em; }

h5 { font-size: 1em; }

h6 { font-size: 1em; color: rgb(119, 119, 119); }

p, blockquote, ul, ol, dl, table { margin: 0.8em 0px; }

li > ol, li > ul { margin: 0px; }

hr { height: 2px; padding: 0px; margin: 16px 0px; background-color: rgb(231=
, 231, 231); border: 0px none; overflow: hidden; box-sizing: content-box; }

li p.first { display: inline-block; }

ul, ol { padding-left: 30px; }

ul:first-child, ol:first-child { margin-top: 0px; }

ul:last-child, ol:last-child { margin-bottom: 0px; }

blockquote { border-left: 4px solid rgb(223, 226, 229); padding: 0px 15px; =
color: rgb(119, 119, 119); }

blockquote blockquote { padding-right: 0px; }

table { padding: 0px; word-break: initial; }

table tr { border: 1px solid rgb(223, 226, 229); margin: 0px; padding: 0px;=
 }

table tr:nth-child(2n), thead { background-color: rgb(248, 248, 248); }

table th { font-weight: bold; border-width: 1px 1px 0px; border-top-style: =
solid; border-right-style: solid; border-left-style: solid; border-top-colo=
r: rgb(223, 226, 229); border-right-color: rgb(223, 226, 229); border-left-=
color: rgb(223, 226, 229); border-image: initial; border-bottom-style: init=
ial; border-bottom-color: initial; margin: 0px; padding: 6px 13px; }

table td { border: 1px solid rgb(223, 226, 229); margin: 0px; padding: 6px =
13px; }

table th:first-child, table td:first-child { margin-top: 0px; }

table th:last-child, table td:last-child { margin-bottom: 0px; }

.CodeMirror-lines { padding-left: 4px; }

.code-tooltip { box-shadow: rgba(0, 28, 36, 0.3) 0px 1px 1px 0px; border-to=
p: 1px solid rgb(238, 242, 242); }

.md-fences, code, tt { border: 1px solid rgb(231, 234, 237); background-col=
or: rgb(248, 248, 248); border-radius: 3px; padding: 2px 4px 0px; font-size=
: 0.9em; }

code { background-color: rgb(243, 244, 244); padding: 0px 2px; }

.md-fences { margin-bottom: 15px; margin-top: 15px; padding-top: 8px; paddi=
ng-bottom: 6px; }

.md-task-list-item > input { margin-left: -1.3em; }

@media print {
  html { font-size: 13px; }
  pre { break-inside: avoid; overflow-wrap: break-word; }
}

.md-fences { background-color: rgb(248, 248, 248); }

#write pre.md-meta-block { padding: 1rem; font-size: 85%; line-height: 1.45=
; background-color: rgb(247, 247, 247); border: 0px; border-radius: 3px; co=
lor: rgb(119, 119, 119); margin-top: 0px !important; }

.mathjax-block > .code-tooltip { bottom: 0.375rem; }

.md-mathjax-midline { background: rgb(250, 250, 250); }

#write > h3.md-focus::before { left: -1.5625rem; top: 0.375rem; }

#write > h4.md-focus::before { left: -1.5625rem; top: 0.285714rem; }

#write > h5.md-focus::before { left: -1.5625rem; top: 0.285714rem; }

#write > h6.md-focus::before { left: -1.5625rem; top: 0.285714rem; }

.md-image > .md-meta { border-radius: 3px; padding: 2px 0px 0px 4px; font-s=
ize: 0.9em; color: inherit; }

.md-tag { color: rgb(167, 167, 167); opacity: 1; }

.md-toc { margin-top: 20px; padding-bottom: 20px; }

.sidebar-tabs { border-bottom: none; }

#typora-quick-open { border: 1px solid rgb(221, 221, 221); background-color=
: rgb(248, 248, 248); }

#typora-quick-open-item { background-color: rgb(250, 250, 250); border-colo=
r: rgb(254, 254, 254) rgb(229, 229, 229) rgb(229, 229, 229) rgb(238, 238, 2=
38); border-style: solid; border-width: 1px; }

.on-focus-mode blockquote { border-left-color: rgba(85, 85, 85, 0.12); }

header, .context-menu, .megamenu-content, footer { font-family: "Segoe UI",=
 Arial, sans-serif; }

.file-node-content:hover .file-node-icon, .file-node-content:hover .file-no=
de-open-state { visibility: visible; }

.mac-seamless-mode #typora-sidebar { background-color: var(--side-bar-bg-co=
lor); }

.md-lang { color: rgb(180, 101, 77); }

#md-notification .btn { border: 0px; }

.dropdown-menu .divider { border-color: rgb(229, 229, 229); opacity: 0.4; }

.ty-preferences .window-content { background-color: rgb(250, 250, 250); }

.ty-preferences .nav-group-item.active { color: white; background: rgb(153,=
 153, 153); }

.menu-item-container a.menu-style-btn { background-color: rgb(245, 248, 250=
); background-image: linear-gradient(rgba(255, 255, 255, 0.8), rgba(255, 25=
5, 255, 0)); }

@media print {
  @page { margin: 0px; }
  body.typora-export { padding-left: 0px; padding-right: 0px; }
  #write { padding: 0px; }
}
------MultipartBoundary--SuIEtYjZFjmMXIM5TqTSfIbEkTNEm2HBBCDxoovvzb----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext

@charset "utf-8";

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+=
FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF=
; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWxU6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+302-303, U+305, U+307-308, U+330, U+391-3A1, U+3A3-3A9, U+=
3B1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+2034-2037, U+2057, U+20D=
0-20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+2110-2112, U+2115, U+21=
19-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+2133-2138, U+213C-2140=
, U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E5, U+21F1-21F2, U+21F=
4-2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310, U+2319, U+231C-2321,=
 U+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+23DC-23E1, U+2474-2475=
, U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25CC, U+25FB, U+266D-26=
6F, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C, U+2BFE, U+FF5B, U+F=
F5D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqW106FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+20E2-20E4, U+2150-218=
F, U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U+21F3, U+2218-2219, U=
+2299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-24FF, U+25A0-27BF, U+2=
800-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-2BFF, U+4DC0-4DFF, U+=
FFF9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+101D0-101FD, U+102E0-10=
2FB, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F000-1F0FF, U+1F100-1F=
1AD, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U+1F31E, U+1F320-1F32C=
, U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U+1F3A7-1F3A8, U+1F3AC=
-1F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4-1F3E0, U+1F3ED, U+1F=
3F1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U+1F426, U+1F43F, U+1F=
441-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F453, U+1F46A, U+1F47D=
, U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF, U+1F4C8-1F4CB, U+1F=
4D6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U+1F4F7, U+1F4F9-1F4FB=
, U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F512-1F513, U+1F53E-1F=
54A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U+1F68D, U+1F691, U+1F=
694, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC, U+1F6C6-1F6CF, U+1F=
6D3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC, U+1F700-1F7FF, U+1F=
800-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887, U+1F890-1F8AD, U+1F=
8B0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U+1F996, U+1F9E9, U+1F=
A00-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD, U+1FABF-1FAC5, U+1F=
ACE-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF=
-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+=
2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6FxZCJgg.woff2") format("woff2"); un=
icode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+30=
4, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+221=
2, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtE6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+=
FE2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWvU6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtU6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuk6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF=
; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWu06FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWxU6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+302-303, U+305, U+307-308, U+330, U+391-3A1, U+3A3-3A9, U+=
3B1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+2034-2037, U+2057, U+20D=
0-20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+2110-2112, U+2115, U+21=
19-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+2133-2138, U+213C-2140=
, U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E5, U+21F1-21F2, U+21F=
4-2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310, U+2319, U+231C-2321,=
 U+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+23DC-23E1, U+2474-2475=
, U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25CC, U+25FB, U+266D-26=
6F, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C, U+2BFE, U+FF5B, U+F=
F5D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqW106FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+20E2-20E4, U+2150-218=
F, U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U+21F3, U+2218-2219, U=
+2299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-24FF, U+25A0-27BF, U+2=
800-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-2BFF, U+4DC0-4DFF, U+=
FFF9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+101D0-101FD, U+102E0-10=
2FB, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F000-1F0FF, U+1F100-1F=
1AD, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U+1F31E, U+1F320-1F32C=
, U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U+1F3A7-1F3A8, U+1F3AC=
-1F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4-1F3E0, U+1F3ED, U+1F=
3F1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U+1F426, U+1F43F, U+1F=
441-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F453, U+1F46A, U+1F47D=
, U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF, U+1F4C8-1F4CB, U+1F=
4D6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U+1F4F7, U+1F4F9-1F4FB=
, U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F512-1F513, U+1F53E-1F=
54A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U+1F68D, U+1F691, U+1F=
694, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC, U+1F6C6-1F6CF, U+1F=
6D3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC, U+1F700-1F7FF, U+1F=
800-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887, U+1F890-1F8AD, U+1F=
8B0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U+1F996, U+1F9E9, U+1F=
A00-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD, U+1FABF-1FAC5, U+1F=
ACE-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWtk6FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF=
-1B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWt06FxZCJgvAQ.woff2") format("woff2"); =
unicode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+=
2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: italic; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
tYaGs126MiZpBA-UFUIcVXSCEkx2cmqvXlWqWuU6FxZCJgg.woff2") format("woff2"); un=
icode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+30=
4, U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+221=
2, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE=
2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; =
}

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTVOmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+302-303, U+305, U+307-308, U+330, U+391-3A1, U+3A3-3A9, U+3B=
1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+2034-2037, U+2057, U+20D0-=
20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+2110-2112, U+2115, U+2119=
-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+2133-2138, U+213C-2140, =
U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E5, U+21F1-21F2, U+21F4-=
2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310, U+2319, U+231C-2321, U=
+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+23DC-23E1, U+2474-2475, =
U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25CC, U+25FB, U+266D-266F=
, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C, U+2BFE, U+FF5B, U+FF5=
D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTUGmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+20E2-20E4, U+2150-218F,=
 U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U+21F3, U+2218-2219, U+2=
299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-24FF, U+25A0-27BF, U+280=
0-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-2BFF, U+4DC0-4DFF, U+FF=
F9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+101D0-101FD, U+102E0-102F=
B, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F000-1F0FF, U+1F100-1F1A=
D, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U+1F31E, U+1F320-1F32C, =
U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U+1F3A7-1F3A8, U+1F3AC-1=
F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4-1F3E0, U+1F3ED, U+1F3F=
1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U+1F426, U+1F43F, U+1F44=
1-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F453, U+1F46A, U+1F47D, =
U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF, U+1F4C8-1F4CB, U+1F4D=
6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U+1F4F7, U+1F4F9-1F4FB, =
U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F512-1F513, U+1F53E-1F54=
A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U+1F68D, U+1F691, U+1F69=
4, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC, U+1F6C6-1F6CF, U+1F6D=
3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC, U+1F700-1F7FF, U+1F80=
0-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887, U+1F890-1F8AD, U+1F8B=
0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U+1F996, U+1F9E9, U+1FA0=
0-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD, U+1FABF-1FAC5, U+1FAC=
E-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1=
B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+20=
20, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 400=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-mu0SC55I.woff2") format("woff2"); unico=
de-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, =
U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, =
U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSKmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE=
2E-FE2F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSumu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSOmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+1F00-1FFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSymu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; =
}

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS2mu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+590-5FF, U+200C-2010, U+20AA, U+25CC, U+FB1D-FB4F; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTVOmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+302-303, U+305, U+307-308, U+330, U+391-3A1, U+3A3-3A9, U+3B=
1-3C9, U+3D1, U+3D5-3D6, U+3F0-3F1, U+3F4-3F5, U+2034-2037, U+2057, U+20D0-=
20DC, U+20E1, U+20E5-20EF, U+2102, U+210A-210E, U+2110-2112, U+2115, U+2119=
-211D, U+2124, U+2128, U+212C-212D, U+212F-2131, U+2133-2138, U+213C-2140, =
U+2145-2149, U+2190, U+2192, U+2194-21AE, U+21B0-21E5, U+21F1-21F2, U+21F4-=
2211, U+2213-2214, U+2216-22FF, U+2308-230B, U+2310, U+2319, U+231C-2321, U=
+2336-237A, U+237C, U+2395, U+239B-23B6, U+23D0, U+23DC-23E1, U+2474-2475, =
U+25AF, U+25B3, U+25B7, U+25BD, U+25C1, U+25CA, U+25CC, U+25FB, U+266D-266F=
, U+27C0-27FF, U+2900-2AFF, U+2B0E-2B11, U+2B30-2B4C, U+2BFE, U+FF5B, U+FF5=
D, U+1D400-1D7FF, U+1EE00-1EEFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTUGmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+1-C, U+E-1F, U+7F-9F, U+20DD-20E0, U+20E2-20E4, U+2150-218F,=
 U+2190, U+2192, U+2194-2199, U+21AF, U+21E6-21F0, U+21F3, U+2218-2219, U+2=
299, U+22C4-22C6, U+2300-243F, U+2440-244A, U+2460-24FF, U+25A0-27BF, U+280=
0-28FF, U+2921-2922, U+2981, U+29BF, U+29EB, U+2B00-2BFF, U+4DC0-4DFF, U+FF=
F9-FFFB, U+10140-1018E, U+10190-1019C, U+101A0, U+101D0-101FD, U+102E0-102F=
B, U+10E60-10E7E, U+1D2C0-1D2D3, U+1D2E0-1D37F, U+1F000-1F0FF, U+1F100-1F1A=
D, U+1F1E6-1F1FF, U+1F30D-1F30F, U+1F315, U+1F31C, U+1F31E, U+1F320-1F32C, =
U+1F336, U+1F378, U+1F37D, U+1F382, U+1F393-1F39F, U+1F3A7-1F3A8, U+1F3AC-1=
F3AF, U+1F3C2, U+1F3C4-1F3C6, U+1F3CA-1F3CE, U+1F3D4-1F3E0, U+1F3ED, U+1F3F=
1-1F3F3, U+1F3F5-1F3F7, U+1F408, U+1F415, U+1F41F, U+1F426, U+1F43F, U+1F44=
1-1F442, U+1F444, U+1F446-1F449, U+1F44C-1F44E, U+1F453, U+1F46A, U+1F47D, =
U+1F4A3, U+1F4B0, U+1F4B3, U+1F4B9, U+1F4BB, U+1F4BF, U+1F4C8-1F4CB, U+1F4D=
6, U+1F4DA, U+1F4DF, U+1F4E3-1F4E6, U+1F4EA-1F4ED, U+1F4F7, U+1F4F9-1F4FB, =
U+1F4FD-1F4FE, U+1F503, U+1F507-1F50B, U+1F50D, U+1F512-1F513, U+1F53E-1F54=
A, U+1F54F-1F5FA, U+1F610, U+1F650-1F67F, U+1F687, U+1F68D, U+1F691, U+1F69=
4, U+1F698, U+1F6AD, U+1F6B2, U+1F6B9-1F6BA, U+1F6BC, U+1F6C6-1F6CF, U+1F6D=
3-1F6D7, U+1F6E0-1F6EA, U+1F6F0-1F6F3, U+1F6F7-1F6FC, U+1F700-1F7FF, U+1F80=
0-1F80B, U+1F810-1F847, U+1F850-1F859, U+1F860-1F887, U+1F890-1F8AD, U+1F8B=
0-1F8B1, U+1F900-1F90B, U+1F93B, U+1F946, U+1F984, U+1F996, U+1F9E9, U+1FA0=
0-1FA6F, U+1FA70-1FA7C, U+1FA80-1FA88, U+1FA90-1FABD, U+1FABF-1FAC5, U+1FAC=
E-1FADB, U+1FAE0-1FAE8, U+1FAF0-1FAF8, U+1FB00-1FBFF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSCmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1=
B0, U+300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTSGmu0SC55K5gw.woff2") format("woff2"); un=
icode-range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+20=
20, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Open Sans"; font-style: normal; font-weight: 700=
; font-stretch: 100%; src: url("https://gstatic.loli.net/s/opensans/v40/mem=
vYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-mu0SC55I.woff2") format("woff2"); unico=
de-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, =
U+308, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, =
U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--SuIEtYjZFjmMXIM5TqTSfIbEkTNEm2HBBCDxoovvzb------
